<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             mc:Ignorable="d"
             xmlns:helpers="clr-namespace:Atomex.Client.Desktop.Helpers"
             xmlns:vm="clr-namespace:Atomex.Client.Desktop.ViewModels.SendViewModels"
             xmlns:controls="clr-namespace:Atomex.Client.Desktop.Controls"
             xmlns:converters="clr-namespace:Atomex.Client.Desktop.Converters"
             x:Class="Atomex.Client.Desktop.Views.SendViews.BitcoinBasedSendView"
             xmlns:behaviors="clr-namespace:Atomex.Client.Desktop.Helpers"
             xmlns:svg="clr-namespace:Avalonia.Svg.Skia;assembly=Avalonia.Svg.Skia"
             xmlns:i="clr-namespace:Avalonia.Xaml.Interactivity;assembly=Avalonia.Xaml.Interactivity"
             xmlns:ia="clr-namespace:Avalonia.Xaml.Interactions.Core;assembly=Avalonia.Xaml.Interactions"
             xmlns:abstract="clr-namespace:Atomex.Client.Desktop.ViewModels.Abstract"
             Width="700">

    <Design.DataContext>
        <vm:BitcoinBasedSendViewModel />
    </Design.DataContext>

    <UserControl.Styles>
        <Style Selector="TextBlock.Message">
            <Setter Property="Foreground" Value="{DynamicResource LightDefaultOpacity50}" />
        </Style>
        <Style Selector="TextBlock.Warning">
            <Setter Property="Foreground" Value="{DynamicResource Orange}" />
        </Style>
        <Style Selector="TextBlock.Error">
            <Setter Property="Foreground" Value="{DynamicResource DarkRed}" />
        </Style>
        <Style Selector="TextBlock.ToolTipMessage">
            <Setter Property="Foreground" Value="{DynamicResource DefaultForegroundColor}" />
        </Style>
        <Style Selector="TextBlock.SendTitle">
            <Setter Property="Foreground" Value="{DynamicResource ChildViewHeaderForegroundBrush}" />
        </Style>
        <Style Selector="TextBlock.ConfirmationTitle">
            <Setter Property="Foreground" Value="{DynamicResource ChildViewHeaderForegroundBrush}" />
        </Style>
    </UserControl.Styles>

    <UserControl.Resources>
        <converters:AmountToStringConverter x:Key="AmountToStringConverter" />
        <converters:AmountToStringInBracketsConverter x:Key="AmountToStringInBracketsConverter" />
        <converters:EnumToStringEqualConverter x:Key="EnumToStringEqualConverter" />
        <converters:EnumToStringNotEqualConverter x:Key="EnumToStringNotEqualConverter" />
        <converters:StringToDecimalConverter x:Key="StringToDecimalConverter" />
    </UserControl.Resources>

    <Border Classes="ChildViewBorder"
            Padding="24 0 24 0"
            Width="700">
        <StackPanel Orientation="Vertical">
            <Grid ColumnDefinitions="Auto,*"
                  RowDefinitions="72">
                <!-- back button -->
                <controls:IconButton Grid.Column="0"
                                     Classes="Back"
                                     IsVisible="{Binding Stage,
                                     Converter={StaticResource EnumToStringNotEqualConverter},
                                     ConverterParameter={x:Static abstract:SendStage.Edit}}"
                                     Command="{Binding UndoConfirmStageCommand}"/>

                <TextBlock Grid.Column="1"
                           FontFamily="{DynamicResource DefaultLightFontFamily}"
                           Margin="-28 0 0 0"
                           FontSize="22"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           Classes="SendTitle"
                           Classes.ConfirmationTitle="{Binding Stage,
                     Converter={StaticResource EnumToStringEqualConverter},
                     ConverterParameter=Confirmation}">
                    <i:Interaction.Behaviors>
                        <ia:DataTriggerBehavior Binding="{Binding Stage}"
                                                ComparisonCondition="Equal"
                                                Value="Edit">
                            <ia:ChangePropertyAction PropertyName="Text"
                                                     Value="Send" />
                        </ia:DataTriggerBehavior>
                        <ia:DataTriggerBehavior Binding="{Binding Stage}"
                                                ComparisonCondition="Equal"
                                                Value="Confirmation">
                            <ia:ChangePropertyAction PropertyName="Text"
                                                     Value="Confirm sending" />
                        </ia:DataTriggerBehavior>
                    </i:Interaction.Behaviors>
                </TextBlock>
            </Grid>

            <!-- separator -->
            <Border Height="1"
                    Margin="-24 0 -24 0"
                    Background="{DynamicResource LightDefaultOpacity10}" />

            <!-- from -->
            <ContentControl Content="{Binding}"
                            ContentTemplate="{StaticResource CurrencySendItemTemplate}"
                            Margin="0 32 0 0"
                            IsVisible="{Binding Stage,
                        Converter={StaticResource EnumToStringNotEqualConverter},
                        ConverterParameter=AdditionalConfirmation}"
                            IsEnabled="{Binding Stage,
                        Converter={StaticResource EnumToStringEqualConverter},
                        ConverterParameter=Edit}" />

            <!-- to -->
            <StackPanel Orientation="Horizontal"
                        HorizontalAlignment="Center"
                        Margin="0 12 0 0"
                        IsVisible="{Binding Stage,
                    Converter={StaticResource EnumToStringNotEqualConverter},
                    ConverterParameter=AdditionalConfirmation}">
                <Border Width="50"
                        Margin="-50 0 0 0">
                    <TextBlock Text="To"
                               Margin="0 0 12 0"
                               Foreground="{DynamicResource SecondaryForegroundBrush}"
                               FontFamily="{DynamicResource DefaultMediumFontFamily}"
                               FontSize="13"
                               VerticalAlignment="Center"
                               HorizontalAlignment="Right" />
                </Border>

                <Border CornerRadius="{DynamicResource AtomexCornerRadius}"
                        Width="440"
                        Height="80"
                        VerticalAlignment="Center"
                        Classes="Editable"
                        Classes.ReadOnly="{Binding Stage,
                  Converter={StaticResource EnumToStringEqualConverter},
                  ConverterParameter=Confirmation}">
                    <Button Padding="20 0"
                            Width="440"
                            Height="80"
                            Command="{Binding SelectToCommand}"
                            IsEnabled="{Binding Stage,
                    Converter={StaticResource EnumToStringEqualConverter},
                    ConverterParameter=Edit}"
                            VerticalContentAlignment="Center"
                            Classes="EmptyBtnWithContent">
                        <Grid ColumnDefinitions="24,*">
                            <svg:Svg Grid.Row="0"
                                     Grid.Column="0"
                                     Path="{Binding CurrencyViewModel.IconPath}"
                                     Width="25" />

                            <TextBlock Grid.Column="1"
                                       FontFamily="{DynamicResource DefaultMediumFontFamily}"
                                       Text="{Binding To}"
                                       FontSize="16"
                                       Margin="17 0 0 0"
                                       VerticalAlignment="Center">
                                <i:Interaction.Behaviors>
                                    <ia:DataTriggerBehavior
                                        Binding="{Binding To, Converter={x:Static StringConverters.IsNotNullOrEmpty}}"
                                        ComparisonCondition="Equal"
                                        Value="False">
                                        <ia:ChangePropertyAction PropertyName="Text"
                                                                 Value="Select destination address..." />
                                        <ia:ChangePropertyAction PropertyName="Foreground"
                                                                 Value="{StaticResource SecondaryForegroundBrush}" />
                                    </ia:DataTriggerBehavior>
                                    <ia:DataTriggerBehavior
                                        Binding="{Binding To, Converter={x:Static StringConverters.IsNotNullOrEmpty}}"
                                        ComparisonCondition="Equal"
                                        Value="True">
                                        <ia:ChangePropertyAction PropertyName="Foreground"
                                                                 Value="{StaticResource DefaultForegroundBrush}" />
                                    </ia:DataTriggerBehavior>
                                </i:Interaction.Behaviors>
                            </TextBlock>
                        </Grid>
                    </Button>
                </Border>
            </StackPanel>

            <!-- edit stage -->
            <StackPanel Margin="0 12 0 0"
                        IsVisible="{Binding Stage,
                    Converter={StaticResource EnumToStringEqualConverter},
                    ConverterParameter=Edit}">
                <!-- amount -->
                <StackPanel Orientation="Horizontal"
                            HorizontalAlignment="Center">

                    <Border Width="60"
                            Margin="-60 0 0 0">
                        <TextBlock Text="Amount"
                                   Margin="0 0 12 0"
                                   Foreground="{DynamicResource SecondaryForegroundBrush}"
                                   FontFamily="{DynamicResource DefaultMediumFontFamily}"
                                   FontSize="13"
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="Right" />
                    </Border>

                    <Grid ColumnDefinitions="398,42">
                        <TextBox Grid.Column="0"
                                 Grid.ColumnSpan="2"
                                 Text="{Binding Amount, Converter={StaticResource StringToDecimalConverter}}"
                                 helpers:AmountTextBoxHelper.CurrencyCode="{Binding CurrencyCode}"
                                 helpers:AmountTextBoxHelper.BaseCurrencyCode="{Binding BaseCurrencyCode}"
                                 helpers:AmountTextBoxHelper.AmountInBaseMargin="0 0 34 0"
                                 Classes="AtomexTextBox AmountTextBox">
                            <helpers:AmountTextBoxHelper.AmountInBase>
                                <MultiBinding Converter="{StaticResource AmountToStringConverter}">
                                    <Binding Path="AmountInBase" Mode="OneWay" />
                                    <Binding Path="BaseCurrencyFormat" Mode="OneWay" />
                                </MultiBinding>
                            </helpers:AmountTextBoxHelper.AmountInBase>
                            <i:Interaction.Behaviors>
                                <behaviors:AmountBehavior Format="{Binding CurrencyFormat}" />
                            </i:Interaction.Behaviors>
                        </TextBox>

                        <controls:LinkButton Grid.Column="1"
                                             Underlined="True"
                                             Classes="Dashed"
                                             HorizontalAlignment="Left"
                                             Command="{Binding MaxCommand}"
                                             Content="max" />
                    </Grid>
                </StackPanel>

                <!-- Classes="AnimationCollapsed" -->
                <!-- IsEnabled="{Binding !UseDefaultFee}" -->
                <StackPanel Orientation="Horizontal"
                            HorizontalAlignment="Center"
                            IsVisible="{Binding !UseDefaultFee}"
                            Margin="0 12 0 0"
                            Height="50">
                    <Border Width="60"
                            Margin="-60 0 0 0">
                        <TextBlock Text="Fee"
                                   Margin="0 0 12 0"
                                   Foreground="{DynamicResource SecondaryForegroundBrush}"
                                   FontFamily="{DynamicResource DefaultMediumFontFamily}"
                                   FontSize="13"
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="Right" />
                    </Border>

                    <TextBox Width="440"
                             FontSize="16"
                             Text="{Binding Fee, Converter={StaticResource StringToDecimalConverter}}"
                             helpers:AmountTextBoxHelper.CurrencyCode="{Binding FeeCurrencyCode}"
                             helpers:AmountTextBoxHelper.BaseCurrencyCode="{Binding BaseCurrencyCode}"
                             Classes="AtomexTextBox AmountTextBox">
                        <helpers:AmountTextBoxHelper.AmountInBase>
                            <MultiBinding Converter="{StaticResource AmountToStringConverter}">
                                <Binding Path="FeeInBase" Mode="OneWay" />
                                <Binding Path="BaseCurrencyFormat" Mode="OneWay" />
                            </MultiBinding>
                        </helpers:AmountTextBoxHelper.AmountInBase>
                        <i:Interaction.Behaviors>
                            <behaviors:AmountBehavior Format="{Binding FeeCurrencyFormat}" />
                        </i:Interaction.Behaviors>
                    </TextBox>
                </StackPanel>

                <!-- warning -->
                <StackPanel Orientation="Horizontal"
                            Margin="0 8 0 0"
                            Width="440"
                            HorizontalAlignment="Center"
                            IsVisible="{Binding Warning, Converter={x:Static StringConverters.IsNotNullOrEmpty}}">
                    <TextBlock Text="{Binding Warning}"
                               MaxWidth="420"
                               TextWrapping="Wrap"
                               VerticalAlignment="Center"
                               FontSize="13"
                               LineHeight="16"
                               FontFamily="{DynamicResource DefaultLightFontFamily}"
                               Classes="Message"
                               Classes.Warning="{Binding WarningType,
                               Converter={StaticResource EnumToStringEqualConverter},
                               ConverterParameter=Warning}"
                               Classes.Error="{Binding WarningType,
                               Converter={StaticResource EnumToStringEqualConverter},
                               ConverterParameter=Error}" />

                    <controls:IconButton Classes="Question WithToolTipContent"
                                         VerticalAlignment="Center"
                                         IsVisible="{Binding WarningToolTip, Converter={x:Static StringConverters.IsNotNullOrEmpty}}"
                                         Margin="4 0 0 0">
                        <TextBlock TextWrapping="Wrap"
                                   Text="{Binding WarningToolTip}"
                                   Classes.Warning="{Binding WarningType,
                                           Converter={StaticResource EnumToStringEqualConverter},
                                           ConverterParameter=Warning}"
                                   Classes.Error="{Binding WarningType,
                                           Converter={StaticResource EnumToStringEqualConverter},
                                           ConverterParameter=Error}" />
                    </controls:IconButton>
                </StackPanel>

                <Grid ColumnDefinitions="*,Auto"
                      RowDefinitions="Auto,Auto"
                      Margin="0 12 0 0"
                      Width="440">

                    <!-- use default fee -->
                    <StackPanel Grid.Row="0"
                                Grid.Column="0"
                                Grid.RowSpan="2"
                                VerticalAlignment="Top">
                        <CheckBox Padding="12 0 0 0"
                                  IsChecked="{Binding UseDefaultFee, Mode=TwoWay}"
                                  FontSize="13"
                                  FontFamily="{DynamicResource DefaultLightFontFamily}"
                                  Foreground="{DynamicResource SecondaryForegroundBrush}"
                                  Content="Use default fee" />
                    </StackPanel>

                    <!-- fee rate -->
                    <StackPanel Grid.Row="0"
                                Grid.Column="1"
                                HorizontalAlignment="Right"
                                Orientation="Horizontal">
                        <TextBlock Foreground="{DynamicResource SecondaryForegroundBrush}"
                                   LineHeight="20"
                                   TextAlignment="Right"
                                   Text="Fee rate:" />

                        <TextBlock Foreground="{DynamicResource SecondaryForegroundBrush}"
                                   LineHeight="20"
                                   Margin="3 0 0 0"
                                   TextAlignment="Right">
                            <TextBlock.Text>
                                <MultiBinding Converter="{StaticResource AmountToStringConverter}">
                                    <Binding Path="FeeRate" Mode="OneWay" />
                                    <Binding Path="FeeRateFormat" Mode="OneWay" />
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>

                        <TextBlock Foreground="{DynamicResource SecondaryForegroundBrush}"
                                   LineHeight="20"
                                   Margin="3 0 0 0"
                                   TextAlignment="Right"
                                   Text="sat/byte" />
                    </StackPanel>

                    <!-- fee -->
                    <StackPanel Grid.Row="1"
                                Grid.Column="1"
                                HorizontalAlignment="Right"
                                Orientation="Horizontal">
                        <TextBlock Foreground="{DynamicResource SecondaryForegroundBrush}"
                                   LineHeight="20"
                                   TextAlignment="Right"
                                   Text="Fee:" />
                        <TextBlock Foreground="{DynamicResource SecondaryForegroundBrush}"
                                   LineHeight="20"
                                   Margin="3 0 0 0"
                                   TextAlignment="Right"
                                   Text="{Binding Fee}" />
                        <TextBlock Foreground="{DynamicResource SecondaryForegroundBrush}"
                                   LineHeight="20"
                                   Margin="3 0 0 0"
                                   TextAlignment="Right"
                                   Text="{Binding FeeCurrencyCode}" />
                        <TextBlock Foreground="{DynamicResource SecondaryForegroundBrush}"
                                   LineHeight="20"
                                   Margin="3 0 0 0"
                                   TextAlignment="Right">
                            <TextBlock.Text>
                                <MultiBinding Converter="{StaticResource AmountToStringInBracketsConverter}">
                                    <Binding Path="FeeInBase" Mode="OneWay" />
                                    <Binding Path="BaseCurrencyFormat" Mode="OneWay" />
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                    </StackPanel>
                </Grid>
            </StackPanel>

            <!-- confirmation stage -->
            <StackPanel Margin="0 18 0 0"
                        IsVisible="{Binding Stage,
                    Converter={StaticResource EnumToStringEqualConverter},
                    ConverterParameter=Confirmation}"
                        Width="440"
                        HorizontalAlignment="Center">
                <Grid ColumnDefinitions="*,Auto,Auto,Auto">
                    <TextBlock Grid.Column="0"
                               Text="Amount"
                               Foreground="{DynamicResource SecondaryForegroundBrush}"
                               FontSize="13" />

                    <TextBlock Grid.Column="1"
                               Text="{Binding Amount}"
                               Foreground="{DynamicResource DefaultForegroundBrush}"
                               FontSize="13" />

                    <TextBlock Grid.Column="2"
                               Margin="3 0 0 0"
                               Text="{Binding CurrencyCode}"
                               Foreground="{DynamicResource DefaultForegroundBrush}"
                               FontSize="13" />

                    <TextBlock Grid.Column="3"
                               Foreground="{DynamicResource DefaultForegroundBrush}"
                               FontSize="13"
                               Margin="3 0 0 0">
                        <TextBlock.Text>
                            <MultiBinding Converter="{StaticResource AmountToStringInBracketsConverter}">
                                <Binding Path="AmountInBase" Mode="OneWay" />
                                <Binding Path="BaseCurrencyFormat" Mode="OneWay" />
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>
                </Grid>

                <Grid ColumnDefinitions="*,Auto,Auto,Auto"
                      Margin="0 6 0 0">
                    <TextBlock Grid.Column="0"
                               Text="Fee"
                               Foreground="{DynamicResource SecondaryForegroundBrush}"
                               FontSize="13" />

                    <TextBlock Grid.Column="1"
                               Text="{Binding Fee}"
                               Foreground="{DynamicResource DefaultForegroundBrush}"
                               FontSize="13" />

                    <TextBlock Grid.Column="2"
                               Margin="3 0 0 0"
                               Text="{Binding FeeCurrencyCode}"
                               Foreground="{DynamicResource DefaultForegroundBrush}"
                               FontSize="13" />

                    <TextBlock Grid.Column="3"
                               Foreground="{DynamicResource DefaultForegroundBrush}"
                               FontSize="13"
                               Margin="3 0 0 0">
                        <TextBlock.Text>
                            <MultiBinding Converter="{StaticResource AmountToStringInBracketsConverter}">
                                <Binding Path="FeeInBase" Mode="OneWay" />
                                <Binding Path="BaseCurrencyFormat" Mode="OneWay" />
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>
                </Grid>

                <Grid ColumnDefinitions="*,Auto,Auto"
                      Margin="0 6 0 0">
                    <TextBlock Grid.Column="0"
                               Text="Fee rate"
                               Foreground="{DynamicResource SecondaryForegroundBrush}"
                               FontSize="13" />

                    <TextBlock Grid.Column="1"
                               Foreground="{DynamicResource DefaultForegroundBrush}"
                               FontSize="13">
                        <TextBlock.Text>
                            <MultiBinding Converter="{StaticResource AmountToStringConverter}">
                                <Binding Path="FeeRate" Mode="OneWay" />
                                <Binding Path="FeeRateFormat" Mode="OneWay" />
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>

                    <TextBlock Grid.Column="2"
                               Margin="3 0 0 0"
                               Text="sat/byte"
                               Foreground="{DynamicResource DefaultForegroundBrush}"
                               FontSize="13" />
                </Grid>

                <Border Height="1"
                        Margin="0 18 0 18"
                        Background="{DynamicResource LightDefaultOpacity10}" />

                <Grid ColumnDefinitions="*,Auto,Auto"
                      Margin="0 6 0 0">
                    <TextBlock Grid.Column="0"
                               Text="Total (include fees)"
                               Foreground="{DynamicResource SecondaryForegroundBrush}"
                               VerticalAlignment="Center"
                               FontSize="13" />

                    <TextBlock Grid.Column="1"
                               Text="{Binding TotalAmountString}"
                               Foreground="{DynamicResource DefaultForegroundBrush}"
                               VerticalAlignment="Center"
                               FontSize="22" />

                    <TextBlock Grid.Column="2"
                               Margin="4 0 0 0"
                               Text="{Binding CurrencyCode}"
                               Foreground="{DynamicResource DefaultForegroundBrush}"
                               VerticalAlignment="Center"
                               FontSize="22" />
                </Grid>
            </StackPanel>

            <!-- send button -->
            <StackPanel Orientation="Horizontal"
                        HorizontalAlignment="Center"
                        Margin="0 32 0 60">
                <controls:RoundedButton Width="440"
                                        Height="50"
                                        CornerRadius="{DynamicResource AtomexCornerRadius}"
                                        FontSize="18"
                                        FontWeight="Normal"
                                        Command="{Binding NextCommand}"
                                        IsEnabled="{Binding CanSend}">
                    <i:Interaction.Behaviors>
                        <ia:DataTriggerBehavior Binding="{Binding Stage}"
                                                ComparisonCondition="Equal"
                                                Value="Edit">
                            <ia:ChangePropertyAction PropertyName="Content"
                                                     Value="Send" />
                        </ia:DataTriggerBehavior>
                        <ia:DataTriggerBehavior Binding="{Binding Stage}"
                                                ComparisonCondition="Equal"
                                                Value="Confirmation">
                            <ia:ChangePropertyAction PropertyName="Content"
                                                     Value="Confirm sending" />
                        </ia:DataTriggerBehavior>
                    </i:Interaction.Behaviors>
                </controls:RoundedButton>
            </StackPanel>
        </StackPanel>
    </Border>
</UserControl>