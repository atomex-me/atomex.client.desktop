<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             mc:Ignorable="d" d:DesignWidth="700" d:DesignHeight="450"
             x:Class="Atomex.Client.Desktop.Views.SendViews.SelectAddressView"
             xmlns:vm="clr-namespace:Atomex.Client.Desktop.ViewModels.SendViewModels"
             xmlns:svg="clr-namespace:Avalonia.Svg.Skia;assembly=Avalonia.Svg.Skia"
             xmlns:controls="clr-namespace:Atomex.Client.Desktop.Controls"
             xmlns:abstract="clr-namespace:Atomex.Client.Desktop.ViewModels.Abstract"
             xmlns:i="clr-namespace:Avalonia.Xaml.Interactivity;assembly=Avalonia.Xaml.Interactivity"
             xmlns:ia="clr-namespace:Avalonia.Xaml.Interactions.Core;assembly=Avalonia.Xaml.Interactions">
    <Design.DataContext>
        <vm:SelectAddressViewModel />
    </Design.DataContext>

    <Border Classes="ChildViewBorder"
            Padding="24 20 24 16"
            Width="700">
        <StackPanel Orientation="Vertical">
            <Grid ColumnDefinitions="Auto,*"
                  RowDefinitions="Auto">

                <controls:IconButton Grid.Column="0"
                                     Classes="Back"
                                     Command="{Binding BackCommand}" />

                <TextBlock Grid.Column="1"
                           FontSize="22"
                           Margin="-28 0 0 0"
                           HorizontalAlignment="Center"
                           Foreground="{DynamicResource LightDefault}">
                    <i:Interaction.Behaviors>
                        <ia:DataTriggerBehavior Binding="{Binding SelectAddressMode}"
                                                ComparisonCondition="Equal"
                                                Value="{x:Static abstract:SelectAddressMode.SendFrom}">
                            <ia:ChangePropertyAction PropertyName="Text"
                                                     Value="Send from" />
                        </ia:DataTriggerBehavior>
                        <ia:DataTriggerBehavior Binding="{Binding SelectAddressMode}"
                                                ComparisonCondition="Equal"
                                                Value="{x:Static abstract:SelectAddressMode.ReceiveTo}">
                            <ia:ChangePropertyAction PropertyName="Text"
                                                     Value="Receive to" />
                        </ia:DataTriggerBehavior>
                        <ia:DataTriggerBehavior Binding="{Binding SelectAddressMode}"
                                                ComparisonCondition="Equal"
                                                Value="{x:Static abstract:SelectAddressMode.ChangeRedeemAddress}">
                            <ia:ChangePropertyAction PropertyName="Text"
                                                     Value="Change redeem address" />
                        </ia:DataTriggerBehavior>
                        <ia:DataTriggerBehavior Binding="{Binding SelectAddressMode}"
                                                ComparisonCondition="Equal"
                                                Value="{x:Static abstract:SelectAddressMode.Connect}">
                            <ia:ChangePropertyAction PropertyName="Text"
                                                     Value="Select address to connect" />
                        </ia:DataTriggerBehavior>
                    </i:Interaction.Behaviors>
                </TextBlock>
            </Grid>

            <Border Margin="-24 16 -24 0"
                    Height="1"
                    Background="{DynamicResource LightDefaultOpacity10}" />

            <TextBox Margin="0 16 0 0"
                     Height="44"
                     CornerRadius="8"
                     FontSize="16"
                     Text="{Binding SearchPattern, Mode=TwoWay}"
                     Classes="SearchTextBox">
                <TextBox.InnerRightContent>
                    <StackPanel VerticalAlignment="Center"
                                IsVisible="{Binding SearchPattern, Converter={x:Static StringConverters.IsNotNullOrEmpty}}">
                        <controls:IconButton Classes="Clear NoEffects"
                                             Command="{ReflectionBinding $parent[TextBox].Clear}"
                                             Margin="0 0 15 0" />
                    </StackPanel>
                </TextBox.InnerRightContent>
                <i:Interaction.Behaviors>
                    <ia:DataTriggerBehavior Binding="{Binding SelectAddressMode}"
                                            ComparisonCondition="Equal"
                                            Value="{x:Static abstract:SelectAddressMode.SendFrom}">
                        <ia:ChangePropertyAction PropertyName="Watermark"
                                                 Value="Search" />
                    </ia:DataTriggerBehavior>
                    <ia:DataTriggerBehavior Binding="{Binding SelectAddressMode}"
                                            ComparisonCondition="NotEqual"
                                            Value="{x:Static abstract:SelectAddressMode.SendFrom}">
                        <ia:ChangePropertyAction PropertyName="Watermark"
                                                 Value="Paste an address" />
                    </ia:DataTriggerBehavior>
                </i:Interaction.Behaviors>
            </TextBox>

            <Grid Margin="0 18 0 0"
                  ColumnDefinitions="Auto,*,Auto,Auto"
                  RowDefinitions="Auto">
                <Border Grid.Row="0"
                        Grid.Column="0"
                        Height="32"
                        VerticalAlignment="Center">
                    <TextBlock Margin="12 0 0 0"
                               FontSize="13"
                               VerticalAlignment="Center"
                               FontFamily="{DynamicResource DefaultLightFontFamily}"
                               Foreground="{DynamicResource SecondaryForegroundBrush}"
                               Text="My addresses" />
                </Border>

                <Button Grid.Row="0"
                        Grid.Column="1"
                        HorizontalAlignment="Right"
                        Command="{Binding ChangeSortTypeCommand}"
                        Classes="SecondaryButton"
                        Name="SortTypeButton">
                    <i:Interaction.Behaviors>
                        <ia:DataTriggerBehavior Binding="{Binding SortByDate}"
                                                ComparisonCondition="Equal"
                                                Value="True">
                            <ia:ChangePropertyAction TargetObject="{Binding #SortTypeButton}"
                                                     PropertyName="Content"
                                                     Value="Sort by date" />
                        </ia:DataTriggerBehavior>
                        <ia:DataTriggerBehavior Binding="{Binding SortByDate}"
                                                ComparisonCondition="NotEqual"
                                                Value="True">
                            <ia:ChangePropertyAction TargetObject="{Binding #SortTypeButton}"
                                                     PropertyName="Content"
                                                     Value="Sort by balance" />
                        </ia:DataTriggerBehavior>
                    </i:Interaction.Behaviors>
                </Button>

                <Button Grid.Row="0"
                        Grid.Column="2"
                        Width="24"
                        Height="26"
                        Background="{DynamicResource LightDefaultOpacity4}"
                        CornerRadius="8"
                        Padding="4 5"
                        Margin="8 0 12 0"
                        Command="{Binding ChangeSortDirectionCommand}"
                        Classes.Rotated="{Binding !SortIsAscending}"
                        Classes.NotRotated="{Binding SortIsAscending}"
                        Classes="SecondaryButton Sort">
                    <svg:Svg HorizontalAlignment="Center"
                             Width="16"
                             Height="16"
                             Path="/Resources/Icons/sort.svg" />
                </Button>
            </Grid>

            <Border Margin="0 10 0 0"
                    Height="1"
                    Background="{DynamicResource LightDefaultOpacity10}" />

            <ListBox Height="300"
                     Background="{DynamicResource AlmostTransparentBrush}"
                     ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                     Items="{Binding MyAddresses}"
                     SelectedItem="{Binding SelectedAddress}"
                     HorizontalAlignment="Stretch"
                     SelectionMode="Single">
                <ListBox.Styles>
                    <Style Selector="ListBoxItem">
                        <Setter Property="Padding" Value="0" />
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        <Setter Property="Cursor" Value="Hand"></Setter>
                    </Style>
                    <Style Selector="ListBoxItem:pointerover /template/ ContentPresenter">
                        <Setter Property="Background" Value="{DynamicResource ListBoxItemPointeroverBrush}" />
                        <Setter Property="CornerRadius" Value="8" />
                    </Style>

                    <Style Selector="ListBoxItem:not(:pointerover) /template/ ContentPresenter">
                        <Setter Property="Background" Value="{DynamicResource AlmostTransparentBrush}" />
                    </Style>
                    <Style Selector="ListBoxItem:selected /template/ ContentPresenter">
                        <Setter Property="Background" Value="{DynamicResource ListBoxItemSelectedBrush}" />
                        <Setter Property="CornerRadius" Value="8" />
                    </Style>
                </ListBox.Styles>

                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Grid ColumnDefinitions="*,Auto"
                              Margin="0 10 0 10"
                              RowDefinitions="Auto">
                            <TextBlock Grid.Column="0"
                                       VerticalAlignment="Center"
                                       Margin="12 0 20 0"
                                       Foreground="{DynamicResource DefaultForegroundBrush}"
                                       FontSize="16"
                                       Text="{Binding WalletAddress.Address}" />

                            <StackPanel Grid.Column="1"
                                        Orientation="Horizontal"
                                        HorizontalAlignment="Right">
                                <Border Background="{DynamicResource RoundedButtonDisabledForegroundBrush}"
                                        CornerRadius="4"
                                        VerticalAlignment="Center"
                                        Padding="6 0"
                                        Height="20"
                                        Margin="0 0 20 0"
                                        IsVisible="{Binding IsFreeAddress}">
                                    <TextBlock Text="new"
                                               FontSize="12"
                                               LineHeight="16"
                                               VerticalAlignment="Center"
                                               Foreground="{DynamicResource DefaultForegroundBrush}" />
                                </Border>

                                <StackPanel Orientation="Horizontal"
                                            IsVisible="{Binding !IsFreeAddress}">
                                    <TextBlock
                                        VerticalAlignment="Center"
                                        Foreground="{DynamicResource SecondaryForegroundBrush}"
                                        FontSize="16">
                                        <TextBlock.Text>
                                            <MultiBinding Converter="{StaticResource AmountToStringConverter}">
                                                <Binding Path="Balance" Mode="OneWay" />
                                                <Binding Path="BalanceFormat" Mode="OneWay" />
                                            </MultiBinding>
                                        </TextBlock.Text>
                                    </TextBlock>

                                    <TextBlock
                                        VerticalAlignment="Center"
                                        Margin="3 0 0 0"
                                        Foreground="{DynamicResource SecondaryForegroundBrush}"
                                        FontSize="16"
                                        IsVisible="{Binding BalanceCode,
                                        Converter={x:Static StringConverters.IsNotNullOrEmpty}}"
                                        Text="{Binding BalanceCode}" />
                                </StackPanel>
                                
                                <controls:CopyButton Margin="20 0 9 0"

                                                     ToolText="Copy address to clipboard"
                                                     DoneToolText="Copied!"
                                                     Command="{Binding $parent[ListBox].DataContext.CopyAddressCommand}"
                                                     CommandParameter="{Binding WalletAddress}" />
                            </StackPanel>
                        </Grid>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>

            <Border Margin="-24 0 -24 16"
                    Height="1"
                    Background="{DynamicResource LightDefaultOpacity10}" />

            <Grid ColumnDefinitions="*,Auto">
                <StackPanel Grid.Column="0"
                            Orientation="Horizontal"
                            Margin="0 0 24 0"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Right"
                            IsVisible="{Binding ExternalWarning}">
                    <controls:IconButton Classes="Warning NoEffects"
                                         Margin="0 0 6 0" />
                    <TextBlock HorizontalAlignment="Right"
                               LineHeight="16"
                               FontSize="13"
                               Foreground="{DynamicResource Orange}"
                               VerticalAlignment="Center">
                        <i:Interaction.Behaviors>
                            <ia:DataTriggerBehavior Binding="{Binding SelectAddressMode}"
                                                    ComparisonCondition="Equal"
                                                    Value="{x:Static abstract:SelectAddressMode.ChangeRedeemAddress}">
                                <ia:ChangePropertyAction PropertyName="Text"
                                                         Value="You will receive " />
                            </ia:DataTriggerBehavior>
                            <ia:DataTriggerBehavior Binding="{Binding SelectAddressMode}"
                                                    ComparisonCondition="NotEqual"
                                                    Value="{x:Static abstract:SelectAddressMode.ChangeRedeemAddress}">
                                <ia:ChangePropertyAction PropertyName="Text"
                                                         Value="You will send " />
                            </ia:DataTriggerBehavior>
                        </i:Interaction.Behaviors>
                    </TextBlock>
                    <TextBlock HorizontalAlignment="Right"
                               LineHeight="16"
                               FontSize="13"
                               VerticalAlignment="Center"
                               Foreground="{DynamicResource Orange}"
                               Text="{Binding Currency.DisplayedName}" />
                    <TextBlock HorizontalAlignment="Right"
                               LineHeight="16"
                               FontSize="13"
                               VerticalAlignment="Center"
                               Foreground="{DynamicResource Orange}"
                               Text=" to the external address." />
                </StackPanel>

                <controls:RoundedButton Grid.Column="1"
                                        Width="200"
                                        Content="Confirm"
                                        IsEnabled="{Binding CanConfirm}"
                                        Command="{Binding ConfirmCommand}" />
            </Grid>
        </StackPanel>
    </Border>
</UserControl>