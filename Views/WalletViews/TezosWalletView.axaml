<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             mc:Ignorable="d" d:DesignWidth="1000" d:DesignHeight="800"
             x:Class="Atomex.Client.Desktop.Views.WalletViews.TezosWalletView"
             xmlns:vm="clr-namespace:Atomex.Client.Desktop.ViewModels.WalletViewModels"
             xmlns:controls="clr-namespace:Atomex.Client.Desktop.Controls"
             xmlns:converters="clr-namespace:Atomex.Client.Desktop.Converters"
             xmlns:i="clr-namespace:Avalonia.Xaml.Interactivity;assembly=Avalonia.Xaml.Interactivity"
             xmlns:ia="clr-namespace:Avalonia.Xaml.Interactions.Core;assembly=Avalonia.Xaml.Interactions"
             xmlns:atomexCore="clr-namespace:Atomex;assembly=Atomex.Client.Core"
             xmlns:atomexBlockchainTezos="clr-namespace:Atomex.Blockchain.Tezos;assembly=Atomex.Client.Core"
             xmlns:abstract="clr-namespace:Atomex.Client.Desktop.ViewModels.Abstract">

    <Design.DataContext>
        <vm:TezosWalletViewModel />
    </Design.DataContext>

    <UserControl.Resources>
        <converters:StringsConcatConverter x:Key="StringsConcatConverter" />
        <converters:AddressShouldShrinkConverter x:Key="AddressShouldShrinkConverter" />
        <converters:AddressShouldExpandConverter x:Key="AddressShouldExpandConverter" />
        <converters:ObjectsEqualConverter x:Key="ObjectsEqualConverter" />
        <converters:PercentConverter x:Key="PercentConverter" />
    </UserControl.Resources>


    <Grid RowDefinitions="Auto,*"
          Name="DesignGrid">
        <controls:WalletCurrency Grid.Row="0"
                                 Grid.Column="0"
                                 Margin="0 40 0 0"
                                 AssetViewModel="{Binding CurrencyViewModel}"
                                 IsBalanceUpdating="{Binding IsBalanceUpdating}"
                                 SendCommand="{Binding SendCommand}"
                                 ReceiveCommand="{Binding ReceiveCommand}"
                                 ExchangeCommand="{Binding ExchangeCommand}"
                                 BuyCommand="{Binding BuyCommand}"
                                 UpdateCommand="{Binding UpdateCommand}" />
        <StackPanel Grid.Row="1"
                    Height="72"
                    ZIndex="1"
                    Margin="0 4 18 0"
                    Orientation="Horizontal"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Top"
                    IsVisible="{Binding #TokensTab.IsSelected}">
            <controls:IconButton Classes="Update Big"
                                 Classes.Updating="{Binding IsTokensUpdating}"
                                 Classes.NotUpdating="{Binding !IsTokensUpdating}"
                                 VerticalAlignment="Center"
                                 ToolText="Update Tokens"
                                 Margin="0 0 12 0"
                                 Command="{Binding UpdateTokensCommand}" />
            <controls:IconButton Classes="SetupAssets"
                                 VerticalAlignment="Center"
                                 ToolText="Manage tokens"
                                 Margin="12 0 0 0"
                                 Command="{Binding ManageTokensCommand}" />
        </StackPanel>

        <StackPanel Grid.Row="1"
                    Height="72"
                    ZIndex="1"
                    Margin="0 4 18 0"
                    Orientation="Horizontal"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Top"
                    IsVisible="{Binding #CollectiblesTab.IsSelected}">
            <controls:IconButton Classes="Update Big"
                                 Classes.Updating="{Binding IsTokensUpdating}"
                                 Classes.NotUpdating="{Binding !IsTokensUpdating}"
                                 VerticalAlignment="Center"
                                 ToolText="Update Collectibles"
                                 Margin="0 0 12 0"
                                 Command="{Binding UpdateTokensCommand}" />
            <controls:IconButton Classes="SetupAssets"
                                 VerticalAlignment="Center"
                                 ToolText="Manage Collectibles"
                                 Margin="12 0 0 0"
                                 Command="{Binding ManageTokensCommand}" />
        </StackPanel>

        <TabControl Grid.Row="1"
                    Margin="0 4 0 0"
                    SelectedIndex="{Binding SelectedTabIndex}"
                    Classes="WalletTabControl">
            <TabItem Margin="0 0 16 0"
                     Classes="WalletTabItem">
                <TabItem.Header>
                    <TextBlock VerticalAlignment="Center"
                               FontSize="16"
                               Text="Activity" />
                </TabItem.Header>

                <controls:TransactionsList Margin="0 16 0 0"
                                           Transactions="{Binding Transactions}"
                                           SelectedTransaction="{Binding SelectedTransaction}"
                                           CurrentSortField="{Binding CurrentSortField}"
                                           CurrentSortDirection="{Binding CurrentSortDirection}"
                                           SetSortTypeCommand="{Binding SetSortTypeCommand}" />
            </TabItem>
            <TabItem Margin="16 0 "
                     Classes="WalletTabItem">
                <TabItem.Header>
                    <TextBlock VerticalAlignment="Center"
                               FontSize="16"
                               Text="Addresses" />
                </TabItem.Header>
                <ContentControl Content="{Binding AddressesViewModel}" />
            </TabItem>
            <TabItem Margin="16 0"
                     Classes="WalletTabItem"
                     Name="TokensTab">
                <TabItem.Header>
                    <TextBlock VerticalAlignment="Center"
                               FontSize="16"
                               Text="Tokens" />
                </TabItem.Header>
                <ContentControl Content="{Binding TezosTokensViewModel}" />
            </TabItem>
            <TabItem Margin="16 0"
                     Classes="WalletTabItem"
                     Name="CollectiblesTab">
                <TabItem.Header>
                    <TextBlock VerticalAlignment="Center"
                               FontSize="16"
                               Text="Collectibles" />
                </TabItem.Header>
                <ContentControl Content="{Binding CollectiblesViewModel}" />
            </TabItem>
            <TabItem Margin="16 0"
                     Classes="WalletTabItem">
                <TabItem.Header>
                    <TextBlock VerticalAlignment="Center"
                               FontSize="16"
                               Text="Delegations" />
                </TabItem.Header>
                <Grid RowDefinitions="Auto,*">
                    <Border Grid.Row="0"
                            Background="{DynamicResource LightDefaultOpacity6}"
                            VerticalAlignment="Top"
                            CornerRadius="{DynamicResource AtomexCornerRadius}"
                            Height="34"
                            Margin="0 16 0 0"
                            Padding="12 0">
                        <Grid ColumnDefinitions="7.5*,3.3*,3.2*,2.5*,3.5*"
                              VerticalAlignment="Stretch">
                            <Button Grid.Column="0"
                                    Padding="0"
                                    VerticalAlignment="Stretch"
                                    VerticalContentAlignment="Center"
                                    IsEnabled="False"
                                    Classes="EmptyBtnWithContent">
                                <TextBlock Foreground="{DynamicResource SecondaryForegroundBrush}"
                                           FontSize="13"
                                           Text="Address" />
                            </Button>
                            <controls:SortButton Grid.Column="1"
                                                 Title="Balance"
                                                 Command="{Binding SetDelegationSortTypeCommand}"
                                                 CommandParameter="{x:Static abstract:DelegationSortField.ByBalance}">
                                <controls:SortButton.SortIsAsc>
                                    <MultiBinding Converter="{x:Static BoolConverters.And}">
                                        <Binding Path="CurrentDelegationSortDirection"
                                                 Converter="{x:Static converters:EnumToStringEqualConverter.Instance}"
                                                 ConverterParameter="{x:Static abstract:SortDirection.Asc}" />
                                        <Binding Path="CurrentDelegationSortField"
                                                 Converter="{x:Static converters:EnumToStringEqualConverter.Instance}"
                                                 ConverterParameter="{x:Static abstract:DelegationSortField.ByBalance}" />
                                    </MultiBinding>
                                </controls:SortButton.SortIsAsc>
                                <controls:SortButton.SortIsDesc>
                                    <MultiBinding Converter="{x:Static BoolConverters.And}">
                                        <Binding Path="CurrentDelegationSortDirection"
                                                 Converter="{x:Static converters:EnumToStringEqualConverter.Instance}"
                                                 ConverterParameter="{x:Static abstract:SortDirection.Desc}" />
                                        <Binding Path="CurrentDelegationSortField"
                                                 Converter="{x:Static converters:EnumToStringEqualConverter.Instance}"
                                                 ConverterParameter="{x:Static abstract:DelegationSortField.ByBalance}" />
                                    </MultiBinding>
                                </controls:SortButton.SortIsDesc>
                            </controls:SortButton>
                            <Button Grid.Column="2"
                                    Padding="0"
                                    VerticalAlignment="Stretch"
                                    VerticalContentAlignment="Center"
                                    IsEnabled="False"
                                    Classes="EmptyBtnWithContent">
                                <TextBlock Foreground="{DynamicResource SecondaryForegroundBrush}"
                                           FontSize="13"
                                           Text="Validator" />
                            </Button>

                            <controls:SortButton Grid.Column="3"
                                                 Title="Est. ROI, %"
                                                 Command="{Binding SetDelegationSortTypeCommand}"
                                                 CommandParameter="{x:Static abstract:DelegationSortField.ByRoi}">
                                <controls:SortButton.SortIsAsc>
                                    <MultiBinding Converter="{x:Static BoolConverters.And}">
                                        <Binding Path="CurrentDelegationSortDirection"
                                                 Converter="{x:Static converters:EnumToStringEqualConverter.Instance}"
                                                 ConverterParameter="{x:Static abstract:SortDirection.Asc}" />
                                        <Binding Path="CurrentDelegationSortField"
                                                 Converter="{x:Static converters:EnumToStringEqualConverter.Instance}"
                                                 ConverterParameter="{x:Static abstract:DelegationSortField.ByRoi}" />
                                    </MultiBinding>
                                </controls:SortButton.SortIsAsc>
                                <controls:SortButton.SortIsDesc>
                                    <MultiBinding Converter="{x:Static BoolConverters.And}">
                                        <Binding Path="CurrentDelegationSortDirection"
                                                 Converter="{x:Static converters:EnumToStringEqualConverter.Instance}"
                                                 ConverterParameter="{x:Static abstract:SortDirection.Desc}" />
                                        <Binding Path="CurrentDelegationSortField"
                                                 Converter="{x:Static converters:EnumToStringEqualConverter.Instance}"
                                                 ConverterParameter="{x:Static abstract:DelegationSortField.ByRoi}" />
                                    </MultiBinding>
                                </controls:SortButton.SortIsDesc>
                            </controls:SortButton>

                            <controls:SortButton Grid.Column="4"
                                                 Title="Status"
                                                 Command="{Binding SetDelegationSortTypeCommand}"
                                                 CommandParameter="{x:Static abstract:DelegationSortField.ByStatus}">
                                <controls:SortButton.SortIsAsc>
                                    <MultiBinding Converter="{x:Static BoolConverters.And}">
                                        <Binding Path="CurrentDelegationSortDirection"
                                                 Converter="{x:Static converters:EnumToStringEqualConverter.Instance}"
                                                 ConverterParameter="{x:Static abstract:SortDirection.Asc}" />
                                        <Binding Path="CurrentDelegationSortField"
                                                 Converter="{x:Static converters:EnumToStringEqualConverter.Instance}"
                                                 ConverterParameter="{x:Static abstract:DelegationSortField.ByStatus}" />
                                    </MultiBinding>
                                </controls:SortButton.SortIsAsc>
                                <controls:SortButton.SortIsDesc>
                                    <MultiBinding Converter="{x:Static BoolConverters.And}">
                                        <Binding Path="CurrentDelegationSortDirection"
                                                 Converter="{x:Static converters:EnumToStringEqualConverter.Instance}"
                                                 ConverterParameter="{x:Static abstract:SortDirection.Desc}" />
                                        <Binding Path="CurrentDelegationSortField"
                                                 Converter="{x:Static converters:EnumToStringEqualConverter.Instance}"
                                                 ConverterParameter="{x:Static abstract:DelegationSortField.ByStatus}" />
                                    </MultiBinding>
                                </controls:SortButton.SortIsDesc>
                            </controls:SortButton>
                        </Grid>
                    </Border>

                    <ListBox Grid.Row="1"
                             Background="{DynamicResource AlmostTransparentBrush}"
                             Items="{Binding Delegations}"
                             HorizontalAlignment="Stretch"
                             VerticalAlignment="Stretch">
                        <ListBox.Styles>
                            <Style Selector="ListBoxItem">
                                <Setter Property="Padding" Value="0" />
                                <Setter Property="Height" Value="48" />
                                <Setter Property="VerticalContentAlignment" Value="Stretch" />
                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                <Setter Property="BorderThickness" Value="0 0 0 1" />
                                <Setter Property="BorderBrush" Value="{DynamicResource LightDefaultOpacity10}" />
                            </Style>
                            <Style Selector="ListBoxItem:selected /template/ ContentPresenter">
                                <Setter Property="Background" Value="{DynamicResource AlmostTransparentBrush}" />
                            </Style>
                            <Style Selector="ListBoxItem:not(:selected) /template/ ContentPresenter">
                                <Setter Property="Background" Value="{DynamicResource AlmostTransparentBrush}" />
                            </Style>

                            <Style Selector="ListBoxItem:pointerover /template/ ContentPresenter">
                                <Setter Property="Background" Value="{DynamicResource ListBoxItemPointeroverBrush}" />
                                <Setter Property="CornerRadius" Value="8" />
                            </Style>
                        </ListBox.Styles>

                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Border Padding="12 0">
                                    <Grid ColumnDefinitions="7.5*,3.3*,3.7*,2.5*,3.5*"
                                          VerticalAlignment="Stretch">
                                        <controls:LinkButton Grid.Column="0"
                                                             Underlined="True"
                                                             Classes="SolidHover"
                                                             FontSize="16"
                                                             HorizontalAlignment="Left"
                                                             Content="{Binding Address}"
                                                             Command="{Binding $parent[ListBox].DataContext.OpenAddressInExplorerCommand}"
                                                             CommandParameter="{Binding Address}"
                                                             IsVisible="{Binding $parent[Border].Bounds.Width,
                                                             Converter={StaticResource AddressShouldExpandConverter}}">
                                            <controls:LinkButton.ToolText>
                                                <MultiBinding Converter="{StaticResource StringsConcatConverter}">
                                                    <Binding Path="ExplorerUri" />
                                                    <Binding Path="Address" />
                                                </MultiBinding>
                                            </controls:LinkButton.ToolText>
                                        </controls:LinkButton>
                                        <controls:LinkButton Grid.Column="0"
                                                             Underlined="True"
                                                             Classes="SolidHover"
                                                             FontSize="16"
                                                             HorizontalAlignment="Left"
                                                             Content="{Binding Address,
                                                             Converter={x:Static converters:StringConverters.ToLongShortenedAddress}}"
                                                             Command="{Binding $parent[ListBox].DataContext.OpenAddressInExplorerCommand}"
                                                             CommandParameter="{Binding Address}"
                                                             IsVisible="{Binding $parent[Border].Bounds.Width,
                                                             Converter={StaticResource AddressShouldShrinkConverter}}">
                                            <controls:LinkButton.ToolText>
                                                <MultiBinding Converter="{StaticResource StringsConcatConverter}">
                                                    <Binding Path="ExplorerUri" />
                                                    <Binding Path="Address" />
                                                </MultiBinding>
                                            </controls:LinkButton.ToolText>
                                        </controls:LinkButton>

                                        <StackPanel Grid.Column="1"
                                                    Orientation="Horizontal">
                                            <TextBlock Foreground="{DynamicResource SecondaryForegroundBrush}"
                                                       VerticalAlignment="Center"
                                                       FontSize="16"
                                                       Text="{Binding Balance}" />

                                            <TextBlock Foreground="{DynamicResource SecondaryForegroundBrush}"
                                                       VerticalAlignment="Center"
                                                       Margin="4 0 0 0"
                                                       FontSize="16"
                                                       Text="{x:Static atomexCore:TezosConfig.Xtz}" />
                                        </StackPanel>

                                        <Grid Grid.Column="2"
                                              ColumnDefinitions="Auto,*">
                                            <Image Width="22"
                                                   Height="22"
                                                   Source="{Binding Baker.Logo,
                                                   Converter={x:Static converters:ImageConverters.ToImage}}"
                                                   VerticalAlignment="Center" />

                                            <TextBlock Grid.Column="1"
                                                       Foreground="{DynamicResource DefaultForegroundBrush}"
                                                       VerticalAlignment="Center"
                                                       TextTrimming="CharacterEllipsis"
                                                       FontSize="16"
                                                       Margin="8 0 0 0"
                                                       Text="{Binding Baker.Name}" />
                                        </Grid>

                                        <TextBlock Grid.Column="3"
                                                   Foreground="{DynamicResource SecondaryForegroundBrush}"
                                                   VerticalAlignment="Center"
                                                   FontSize="16"
                                                   Text="{Binding Baker.EstimatedRoi, Converter={StaticResource PercentConverter}}" />

                                        <Grid Grid.Column="4"
                                              ColumnDefinitions="*,Auto">
                                            <TextBlock Grid.Column="0"
                                                       VerticalAlignment="Center"
                                                       FontSize="16"
                                                       Text="{Binding StatusString}"
                                                       TextTrimming="CharacterEllipsis"
                                                       Name="StatusText">
                                                <i:Interaction.Behaviors>
                                                    <ia:DataTriggerBehavior Binding="{Binding Status}"
                                                                            ComparisonCondition="Equal"
                                                                            Value="{x:Static atomexBlockchainTezos:DelegationStatus.Active}">
                                                        <ia:ChangePropertyAction PropertyName="Foreground"
                                                            Value="{StaticResource Emerald}" />
                                                    </ia:DataTriggerBehavior>
                                                    <ia:DataTriggerBehavior Binding="{Binding Status}"
                                                                            ComparisonCondition="Equal"
                                                                            Value="{x:Static atomexBlockchainTezos:DelegationStatus.Confirmed}">
                                                        <ia:ChangePropertyAction PropertyName="Foreground"
                                                            Value="{StaticResource BlueSky}" />
                                                    </ia:DataTriggerBehavior>
                                                    <ia:DataTriggerBehavior Binding="{Binding Status}"
                                                                            ComparisonCondition="Equal"
                                                                            Value="{x:Static atomexBlockchainTezos:DelegationStatus.Pending}">
                                                        <ia:ChangePropertyAction PropertyName="Foreground"
                                                            Value="{StaticResource Orange}" />
                                                    </ia:DataTriggerBehavior>
                                                    <ia:DataTriggerBehavior Binding="{Binding Status}"
                                                                            ComparisonCondition="Equal"
                                                                            Value="{x:Static atomexBlockchainTezos:DelegationStatus.NotDelegated}">
                                                        <ia:ChangePropertyAction PropertyName="Foreground"
                                                            Value="{StaticResource SecondaryForegroundBrush}" />
                                                    </ia:DataTriggerBehavior>
                                                </i:Interaction.Behaviors>
                                            </TextBlock>
                                            <controls:IconButton Grid.Column="1"
                                                                 Classes="MenuDots"
                                                                 Command="{Binding $parent[ListBox].DataContext.OpenDelegationPopupCommand}"
                                                                 CommandParameter="{Binding Address}">
                                                <Popup PlacementMode="Left"
                                                       VerticalAlignment="Center"
                                                       WindowManagerAddShadowHint="False"
                                                       IsLightDismissEnabled="True"
                                                       Closed="Popup_OnClosed">
                                                    <Popup.IsOpen>
                                                        <MultiBinding
                                                            Converter="{StaticResource ObjectsEqualConverter}">
                                                            <Binding Path="Address" />
                                                            <Binding
                                                                Path="$parent[ListBox].DataContext.DelegationAddressPopupOpened" />
                                                        </MultiBinding>
                                                    </Popup.IsOpen>
                                                    <Border Background="{DynamicResource DeepBlue}"
                                                            CornerRadius="{DynamicResource AtomexCornerRadius}"
                                                            Padding="12 16">
                                                        <StackPanel Classes="Popup">
                                                            <StackPanel Orientation="Vertical"
                                                                        IsVisible="{Binding Status,
                                                                        Converter={x:Static converters:EnumToStringNotEqualConverter.Instance},
                                                                        ConverterParameter={x:Static atomexBlockchainTezos:DelegationStatus.NotDelegated}}">
                                                                <Button
                                                                    CornerRadius="{DynamicResource AtomexCornerRadius}"
                                                                    VerticalContentAlignment="Center"
                                                                    Command="{Binding $parent[ListBox].DataContext.DelegateCommand}"
                                                                    CommandParameter="{Binding Address}">
                                                                    <TextBlock Text="Change Validator"
                                                                               Foreground="{DynamicResource DefaultForegroundBrush}"
                                                                               VerticalAlignment="Center"
                                                                               FontSize="16" />
                                                                </Button>
                                                                <Button
                                                                    CornerRadius="{DynamicResource AtomexCornerRadius}"
                                                                    VerticalContentAlignment="Center"
                                                                    Command="{Binding $parent[ListBox].DataContext.UndelegateCommand}"
                                                                    CommandParameter="{Binding Address}">
                                                                    <TextBlock Text="Undelegate"
                                                                               Foreground="{DynamicResource DefaultForegroundBrush}"
                                                                               VerticalAlignment="Center"
                                                                               FontSize="16" />
                                                                </Button>
                                                            </StackPanel>

                                                            <StackPanel Orientation="Vertical"
                                                                        IsVisible="{Binding Status,
                                                                        Converter={x:Static converters:EnumToStringEqualConverter.Instance},
                                                                        ConverterParameter={x:Static atomexBlockchainTezos:DelegationStatus.NotDelegated}}">
                                                                <Button
                                                                    CornerRadius="{DynamicResource AtomexCornerRadius}"
                                                                    VerticalContentAlignment="Center"
                                                                    Command="{Binding $parent[ListBox].DataContext.DelegateCommand}"
                                                                    CommandParameter="{Binding Address}">
                                                                    <TextBlock Text="Delegate"
                                                                               Foreground="{DynamicResource DefaultForegroundBrush}"
                                                                               VerticalAlignment="Center"
                                                                               FontSize="16" />
                                                                </Button>
                                                            </StackPanel>
                                                        </StackPanel>
                                                    </Border>
                                                </Popup>
                                            </controls:IconButton>
                                        </Grid>
                                    </Grid>
                                </Border>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </Grid>
            </TabItem>
        </TabControl>
    </Grid>
</UserControl>