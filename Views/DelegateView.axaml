<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             mc:Ignorable="d" d:DesignWidth="700" d:DesignHeight="600"
             x:Class="Atomex.Client.Desktop.Views.DelegateView"
             xmlns:controls="clr-namespace:Atomex.Client.Desktop.Controls"
             xmlns:converters="clr-namespace:Atomex.Client.Desktop.Converters"
             xmlns:viewModels="clr-namespace:Atomex.Client.Desktop.ViewModels"
             xmlns:abstract="clr-namespace:Atomex.Client.Desktop.ViewModels.Abstract"
             xmlns:atomex="clr-namespace:Atomex;assembly=Atomex.Client.Core"
             xmlns:svg="clr-namespace:Avalonia.Svg.Skia;assembly=Avalonia.Svg.Skia"
             xmlns:asyncImageLoader="clr-namespace:AsyncImageLoader;assembly=AsyncImageLoader.Avalonia"
             xmlns:services="clr-namespace:Atomex.Client.Desktop.Services"
             xmlns:common="clr-namespace:Atomex.Common;assembly=Atomex.Client.Core"
             Width="700">
    <Design.DataContext>
        <viewModels:DelegateViewModel />
    </Design.DataContext>

    <UserControl.Resources>
        <converters:PercentConverter x:Key="PercentConverter" />
        <converters:AmountToStringConverter x:Key="AmountToStringConverter" />
    </UserControl.Resources>

    <UserControl.Styles>
        <Style Selector="TextBlock.BakerFull">
            <Setter Property="Foreground" Value="{DynamicResource Orange}" />
        </Style>
        <Style Selector="TextBlock.BakerNotFull">
            <Setter Property="Foreground" Value="{DynamicResource DefaultForegroundBrush}" />
        </Style>
    </UserControl.Styles>

    <Border Classes="ChildViewBorder"
            Padding="24 0 24 16">
        <StackPanel Orientation="Vertical">
            <Grid ColumnDefinitions="Auto,*"
                  RowDefinitions="72">
                <!-- back button -->
                <controls:IconButton Grid.Column="0"
                                     Classes="Back"
                                     IsVisible="{Binding Stage,
                                     Converter={x:Static converters:EnumToStringNotEqualConverter.Instance},
                                     ConverterParameter={x:Static abstract:SendStage.Edit}}"
                                     Command="{Binding UndoConfirmStageCommand}" />

                <!-- window title -->
                <TextBlock Grid.Column="1"
                           IsVisible="{Binding Stage,
                           Converter={x:Static converters:EnumToStringEqualConverter.Instance},
                           ConverterParameter={x:Static abstract:SendStage.Edit}}"
                           Foreground="{DynamicResource DefaultForegroundBrush}"
                           FontSize="22"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           Text="{Binding Title}" />

                <TextBlock Grid.Column="1"
                           IsVisible="{Binding Stage,
                           Converter={x:Static converters:EnumToStringEqualConverter.Instance},
                           ConverterParameter={x:Static abstract:SendStage.Confirmation}}"
                           Foreground="{DynamicResource DefaultForegroundBrush}"
                           FontSize="22"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           Text="Confirm Delegation" />
            </Grid>

            <!-- separator -->
            <Border Height="1"
                    Margin="-24 0 -24 0"
                    Background="{DynamicResource LightDefaultOpacity10}" />

            <StackPanel
                IsVisible="{Binding Stage,
                            Converter={x:Static converters:EnumToStringEqualConverter.Instance},
                            ConverterParameter={x:Static abstract:SendStage.Edit}}">
                <TextBox Margin="0 16 0 0"
                         Height="44"
                         CornerRadius="8"
                         Watermark="Search baker"
                         FontSize="16"
                         Text="{Binding SearchPattern, Mode=TwoWay}"
                         Classes="SearchTextBox">
                    <TextBox.InnerRightContent>
                        <StackPanel VerticalAlignment="Center"
                                    IsVisible="{Binding SearchPattern, Converter={x:Static StringConverters.IsNotNullOrEmpty}}">
                            <controls:IconButton Classes="Clear NoEffects"
                                                 Command="{ReflectionBinding $parent[TextBox].Clear}"
                                                 Margin="0 0 15 0" />
                        </StackPanel>
                    </TextBox.InnerRightContent>
                </TextBox>

                <Border Background="{DynamicResource LightDefaultOpacity6}"
                        VerticalAlignment="Top"
                        CornerRadius="{DynamicResource AtomexCornerRadius}"
                        Height="34"
                        Margin="0 16 0 0"
                        Padding="12 0">
                    <Grid ColumnDefinitions="10*,2*,2.5*"
                          VerticalAlignment="Stretch">
                        <controls:SortButton Grid.Column="0"
                                             Title="Validator"
                                             Command="{Binding SetSortTypeCommand}"
                                             CommandParameter="{x:Static abstract:DelegationSortField.ByValidator}">
                            <controls:SortButton.SortIsAsc>
                                <MultiBinding Converter="{x:Static BoolConverters.And}">
                                    <Binding Path="CurrentSortDirection"
                                             Converter="{x:Static converters:EnumToStringEqualConverter.Instance}"
                                             ConverterParameter="{x:Static common:SortDirection.Asc}" />
                                    <Binding Path="CurrentSortField"
                                             Converter="{x:Static converters:EnumToStringEqualConverter.Instance}"
                                             ConverterParameter="{x:Static abstract:DelegationSortField.ByValidator}" />
                                </MultiBinding>
                            </controls:SortButton.SortIsAsc>
                            <controls:SortButton.SortIsDesc>
                                <MultiBinding Converter="{x:Static BoolConverters.And}">
                                    <Binding Path="CurrentSortDirection"
                                             Converter="{x:Static converters:EnumToStringEqualConverter.Instance}"
                                             ConverterParameter="{x:Static common:SortDirection.Desc}" />
                                    <Binding Path="CurrentSortField"
                                             Converter="{x:Static converters:EnumToStringEqualConverter.Instance}"
                                             ConverterParameter="{x:Static abstract:DelegationSortField.ByValidator}" />
                                </MultiBinding>
                            </controls:SortButton.SortIsDesc>
                        </controls:SortButton>
                        <controls:SortButton Grid.Column="1"
                                             Title="Min, XTZ"
                                             HorizontalAlignment="Right"
                                             Command="{Binding SetSortTypeCommand}"
                                             CommandParameter="{x:Static abstract:DelegationSortField.ByMinTez}">
                            <controls:SortButton.SortIsAsc>
                                <MultiBinding Converter="{x:Static BoolConverters.And}">
                                    <Binding Path="CurrentSortDirection"
                                             Converter="{x:Static converters:EnumToStringEqualConverter.Instance}"
                                             ConverterParameter="{x:Static common:SortDirection.Asc}" />
                                    <Binding Path="CurrentSortField"
                                             Converter="{x:Static converters:EnumToStringEqualConverter.Instance}"
                                             ConverterParameter="{x:Static abstract:DelegationSortField.ByMinTez}" />
                                </MultiBinding>
                            </controls:SortButton.SortIsAsc>
                            <controls:SortButton.SortIsDesc>
                                <MultiBinding Converter="{x:Static BoolConverters.And}">
                                    <Binding Path="CurrentSortDirection"
                                             Converter="{x:Static converters:EnumToStringEqualConverter.Instance}"
                                             ConverterParameter="{x:Static common:SortDirection.Desc}" />
                                    <Binding Path="CurrentSortField"
                                             Converter="{x:Static converters:EnumToStringEqualConverter.Instance}"
                                             ConverterParameter="{x:Static abstract:DelegationSortField.ByMinTez}" />
                                </MultiBinding>
                            </controls:SortButton.SortIsDesc>
                        </controls:SortButton>
                        <controls:SortButton Grid.Column="2"
                                             Title="Est. ROI, %"
                                             HorizontalAlignment="Right"
                                             Command="{Binding SetSortTypeCommand}"
                                             CommandParameter="{x:Static abstract:DelegationSortField.ByRoi}">
                            <controls:SortButton.SortIsAsc>
                                <MultiBinding Converter="{x:Static BoolConverters.And}">
                                    <Binding Path="CurrentSortDirection"
                                             Converter="{x:Static converters:EnumToStringEqualConverter.Instance}"
                                             ConverterParameter="{x:Static common:SortDirection.Asc}" />
                                    <Binding Path="CurrentSortField"
                                             Converter="{x:Static converters:EnumToStringEqualConverter.Instance}"
                                             ConverterParameter="{x:Static abstract:DelegationSortField.ByRoi}" />
                                </MultiBinding>
                            </controls:SortButton.SortIsAsc>
                            <controls:SortButton.SortIsDesc>
                                <MultiBinding Converter="{x:Static BoolConverters.And}">
                                    <Binding Path="CurrentSortDirection"
                                             Converter="{x:Static converters:EnumToStringEqualConverter.Instance}"
                                             ConverterParameter="{x:Static common:SortDirection.Desc}" />
                                    <Binding Path="CurrentSortField"
                                             Converter="{x:Static converters:EnumToStringEqualConverter.Instance}"
                                             ConverterParameter="{x:Static abstract:DelegationSortField.ByRoi}" />
                                </MultiBinding>
                            </controls:SortButton.SortIsDesc>
                        </controls:SortButton>
                    </Grid>
                </Border>

                <ListBox Background="{DynamicResource AlmostTransparentBrush}"
                         Items="{Binding BakersList}"
                         SelectedItem="{Binding SelectedBaker}"
                         Height="336"
                         HorizontalAlignment="Stretch"
                         SelectionMode="Single">
                    <ListBox.Styles>
                        <Style Selector="ListBoxItem">
                            <Setter Property="Padding" Value="12 0" />
                            <Setter Property="Height" Value="60" />
                            <Setter Property="VerticalContentAlignment" Value="Center" />
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            <Setter Property="Cursor" Value="Hand" />
                            <Setter Property="BorderThickness" Value="0 0 0 1" />
                            <Setter Property="Background" Value="{DynamicResource AlmostTransparentBrush}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource LightDefaultOpacity10}" />
                        </Style>
                        <Style Selector="ListBoxItem:pointerover /template/ ContentPresenter">
                            <Setter Property="Background" Value="{DynamicResource ListBoxItemPointeroverBrush}" />
                            <Setter Property="CornerRadius" Value="8" />
                        </Style>
                        <Style Selector="ListBoxItem:selected /template/ ContentPresenter">
                            <Setter Property="Background" Value="{DynamicResource Blue}" />
                            <Setter Property="CornerRadius" Value="8" />
                        </Style>
                    </ListBox.Styles>

                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Grid ColumnDefinitions="10*,2*,2.5*"
                                  RowDefinitions="Auto">
                                <StackPanel Orientation="Horizontal"
                                            Grid.Column="0">
                                    <Border Width="32"
                                            Height="32"
                                            ClipToBounds="True"
                                            CornerRadius="4">
                                        <asyncImageLoader:AdvancedImage StretchDirection="Both"
                                                                        Stretch="UniformToFill"
                                                                        Source="{Binding Logo}"
                                                                        Loader="{x:Static services:FileCacheImageLoader.Instance}" />
                                    </Border>

                                    <StackPanel Margin="16 0 0 0"
                                                VerticalAlignment="Center">
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock VerticalAlignment="Center"
                                                       Foreground="{DynamicResource DefaultForegroundBrush}"
                                                       FontSize="16"
                                                       LineHeight="22"
                                                       Text="{Binding Name}" />

                                            <Border Background="{DynamicResource RoundedButtonDisabledForegroundBrush}"
                                                    CornerRadius="4"
                                                    VerticalAlignment="Top"
                                                    Margin="6 0 0 0"
                                                    Padding="6 0"
                                                    Height="18"
                                                    IsVisible="{Binding IsCurrentlyActive}">
                                                <TextBlock Text="current"
                                                           FontSize="12"
                                                           LineHeight="16"
                                                           VerticalAlignment="Center"
                                                           Foreground="{DynamicResource DefaultForegroundBrush}" />
                                            </Border>
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock VerticalAlignment="Center"
                                                       FontSize="13"
                                                       Classes.BakerFull="{Binding StakingAvailable,
                                                       Converter={x:Static converters:NumericConverters.LowerThanZero}}"
                                                       Classes.BakerNotFull="{Binding StakingAvailable,
                                                   Converter={x:Static converters:NumericConverters.GreaterThanZero}}"
                                                       Text="Free space" />
                                            <TextBlock VerticalAlignment="Center"
                                                       Margin="4 0 0 0"
                                                       Classes.BakerFull="{Binding StakingAvailable,
                                                       Converter={x:Static converters:NumericConverters.LowerThanZero}}"
                                                       Classes.BakerNotFull="{Binding StakingAvailable,
                                                   Converter={x:Static converters:NumericConverters.GreaterThanZero}}"
                                                       FontSize="13"
                                                       Text="{Binding FreeSpaceFormatted}" />
                                            <TextBlock VerticalAlignment="Center"
                                                       Margin="4 0 0 0"
                                                       FontSize="13"
                                                       Foreground="{DynamicResource Orange}"
                                                       IsVisible="{Binding StakingAvailable,
                                                       Converter={x:Static converters:NumericConverters.LowerThanZero}}"
                                                       Text="(baker is full)" />
                                        </StackPanel>
                                    </StackPanel>
                                </StackPanel>

                                <StackPanel Grid.Column="1"
                                            VerticalAlignment="Center"
                                            HorizontalAlignment="Right"
                                            Orientation="Horizontal">
                                    <TextBlock FontSize="16"
                                               Foreground="{DynamicResource DefaultForegroundBrush}"
                                               Text="{Binding MinDelegation}" />
                                    <TextBlock FontSize="16"
                                               Foreground="{DynamicResource DefaultForegroundBrush}"
                                               Margin="4 0 0 0"
                                               Text="{x:Static atomex:TezosConfig.Xtz}" />
                                </StackPanel>

                                <TextBlock Grid.Column="2"
                                           VerticalAlignment="Center"
                                           FontSize="16"
                                           Foreground="{DynamicResource DefaultForegroundBrush}"
                                           HorizontalAlignment="Right"
                                           Text="{Binding Roi, Converter={StaticResource PercentConverter}}" />
                            </Grid>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>

                <!-- separator -->
                <Border Height="1"
                        Margin="-24 0 -24 0"
                        Background="{DynamicResource LightDefaultOpacity10}" />

                <StackPanel Orientation="Horizontal"
                            Margin="0 16 0 0"
                            HorizontalAlignment="Right">
                    <controls:RoundedButton Width="200"
                                            Content="Next"
                                            Command="{Binding CheckDelegationCommand}">
                        <controls:RoundedButton.IsEnabled>
                            <MultiBinding Converter="{x:Static BoolConverters.And}">
                                <Binding Path="SelectedBaker"
                                         Converter="{x:Static ObjectConverters.IsNotNull}" />
                                <Binding Path="SelectedBaker.IsCurrentlyActive"
                                         Converter="{x:Static BoolConverters.Not}" />
                            </MultiBinding>
                        </controls:RoundedButton.IsEnabled>
                    </controls:RoundedButton>
                </StackPanel>
            </StackPanel>

            <StackPanel
                IsVisible="{Binding Stage,
                            Converter={x:Static converters:EnumToStringEqualConverter.Instance},
                            ConverterParameter={x:Static abstract:SendStage.Confirmation}}">
                <Border Width="440"
                        Height="74"
                        HorizontalAlignment="Center"
                        Margin="0 32 0 0"
                        Padding="16 0"
                        CornerRadius="{DynamicResource AtomexCornerRadius}"
                        BorderBrush="{DynamicResource LightDefaultOpacity10}"
                        BorderThickness="1">
                    <Grid ColumnDefinitions="Auto,*,Auto">
                        <Border Grid.Column="0"
                                Width="32"
                                Height="32"
                                HorizontalAlignment="Left"
                                ClipToBounds="True"
                                CornerRadius="4">
                            <asyncImageLoader:AdvancedImage StretchDirection="Both"
                                                            Stretch="UniformToFill"
                                                            Source="{Binding SelectedBaker.Logo}"
                                                            Loader="{x:Static services:FileCacheImageLoader.Instance}" />
                        </Border>

                        <StackPanel Grid.Column="1"
                                    Margin="16 0 0 0"
                                    VerticalAlignment="Center">

                            <TextBlock VerticalAlignment="Center"
                                       Foreground="{DynamicResource DefaultForegroundBrush}"
                                       FontSize="16"
                                       LineHeight="22"
                                       Text="{Binding SelectedBaker.Name}" />

                            <StackPanel Orientation="Horizontal">
                                <TextBlock VerticalAlignment="Center"
                                           FontSize="13"
                                           Classes.BakerFull="{Binding SelectedBaker.StakingAvailable,
                                                       Converter={x:Static converters:NumericConverters.LowerThanZero}}"
                                           Classes.BakerNotFull="{Binding SelectedBaker.StakingAvailable,
                                                   Converter={x:Static converters:NumericConverters.GreaterThanZero}}"
                                           Text="Free space" />
                                <TextBlock VerticalAlignment="Center"
                                           Margin="4 0 0 0"
                                           Classes.BakerFull="{Binding SelectedBaker.StakingAvailable,
                                                       Converter={x:Static converters:NumericConverters.LowerThanZero}}"
                                           Classes.BakerNotFull="{Binding SelectedBaker.StakingAvailable,
                                                   Converter={x:Static converters:NumericConverters.GreaterThanZero}}"
                                           FontSize="13"
                                           Text="{Binding SelectedBaker.FreeSpaceFormatted}" />
                                <TextBlock VerticalAlignment="Center"
                                           Margin="4 0 0 0"
                                           FontSize="13"
                                           Foreground="{DynamicResource Orange}"
                                           IsVisible="{Binding SelectedBaker.StakingAvailable,
                                                       Converter={x:Static converters:NumericConverters.LowerThanZero}}"
                                           Text="(baker is full)" />
                            </StackPanel>
                        </StackPanel>

                        <StackPanel Grid.Column="2"
                                    VerticalAlignment="Center">
                            <StackPanel Orientation="Horizontal"
                                        HorizontalAlignment="Right"
                                        Margin="0 0 0 1">
                                <TextBlock Text="min"
                                           FontSize="13"
                                           Foreground="{DynamicResource SecondaryForegroundBrush}" />
                                <TextBlock Text="{Binding SelectedBaker.MinDelegation}"
                                           Foreground="{DynamicResource SecondaryForegroundBrush}"
                                           Margin="3 0 0 0"
                                           FontSize="13" />
                                <TextBlock Text="{x:Static atomex:TezosConfig.Xtz}"
                                           Foreground="{DynamicResource SecondaryForegroundBrush}"
                                           Margin="3 0 0 0"
                                           FontSize="13" />
                            </StackPanel>
                            <StackPanel Orientation="Horizontal"
                                        HorizontalAlignment="Right"
                                        Margin="0 1 0 0">
                                <TextBlock Text="Est. ROI"
                                           FontSize="13"
                                           Foreground="{DynamicResource SecondaryForegroundBrush}" />
                                <TextBlock
                                    Text="{Binding SelectedBaker.Roi,
                                    Converter={StaticResource PercentConverter}}"
                                    Foreground="{DynamicResource SecondaryForegroundBrush}"
                                    Margin="3 0 0 0"
                                    FontSize="13" />
                            </StackPanel>
                        </StackPanel>
                    </Grid>
                </Border>

                <Grid ColumnDefinitions="*,Auto"
                      RowDefinitions="30,30,30,Auto,Auto"
                      Width="440"
                      Margin="0 25 0 0"
                      HorizontalAlignment="Center">
                    <TextBlock Grid.Column="0"
                               Grid.Row="0"
                               Foreground="{DynamicResource SecondaryForegroundBrush}"
                               FontSize="16"
                               VerticalAlignment="Center"
                               Text="From address" />

                    <StackPanel Grid.Column="1"
                                Grid.Row="0"
                                HorizontalAlignment="Right"
                                Orientation="Horizontal">
                        <svg:Svg HorizontalAlignment="Center"
                                 Width="18"
                                 Height="18"
                                 Path="/Resources/Icons/tezos-disabled.svg" />
                        <TextBlock Margin="8 0 0 0"
                                   Foreground="{DynamicResource DefaultForegroundBrush}"
                                   FontSize="16"
                                   VerticalAlignment="Center"
                                   Text="{Binding DelegateAddress,
                                   Converter={x:Static converters:StringConverters.ToShortenedAddress}}" />

                        <controls:CopyButton ToolText="Copy your delegating address"
                                             DoneToolText="Copied!"
                                             Margin="6 0 0 0"
                                             Command="{Binding CopyCommand}"
                                             CommandParameter="{Binding DelegateAddress}" />
                    </StackPanel>

                    <TextBlock Grid.Column="0"
                               Grid.Row="1"
                               Foreground="{DynamicResource SecondaryForegroundBrush}"
                               FontSize="16"
                               VerticalAlignment="Center"
                               Text="To address" />

                    <StackPanel Grid.Column="1"
                                Grid.Row="1"
                                HorizontalAlignment="Right"
                                Orientation="Horizontal">
                        <Border Width="18"
                                Height="18"
                                ClipToBounds="True"
                                CornerRadius="4">
                            <asyncImageLoader:AdvancedImage StretchDirection="Both"
                                                            Stretch="UniformToFill"
                                                            Source="{Binding SelectedBaker.Logo}"
                                                            Loader="{x:Static services:FileCacheImageLoader.Instance}" />
                        </Border>
                        
                        <TextBlock Margin="8 0 0 0"
                                   Foreground="{DynamicResource DefaultForegroundBrush}"
                                   FontSize="16"
                                   VerticalAlignment="Center"
                                   Text="{Binding SelectedBaker.Address,
                                   Converter={x:Static converters:StringConverters.ToShortenedAddress}}" />

                        <controls:CopyButton ToolText="Copy baker address"
                                             DoneToolText="Copied!"
                                             Margin="6 0 0 0"
                                             Command="{Binding CopyCommand}"
                                             CommandParameter="{Binding SelectedBaker.Address}" />
                    </StackPanel>

                    <TextBlock Grid.Column="0"
                               Grid.Row="2"
                               Foreground="{DynamicResource SecondaryForegroundBrush}"
                               FontSize="16"
                               VerticalAlignment="Center"
                               Text="Fee" />

                    <StackPanel Grid.Column="1"
                                Grid.Row="2"
                                HorizontalAlignment="Right"
                                Orientation="Horizontal">

                        <TextBlock Foreground="{DynamicResource DefaultForegroundBrush}"
                                   FontSize="16"
                                   VerticalAlignment="Center"
                                   Text="{Binding Fee}" />

                        <TextBlock Foreground="{DynamicResource DefaultForegroundBrush}"
                                   Margin="4 0 0 0"
                                   FontSize="16"
                                   VerticalAlignment="Center"
                                   Text="{x:Static atomex:TezosConfig.Xtz}" />

                        <TextBlock Foreground="{DynamicResource SecondaryForegroundBrush}"
                                   Margin="4 0"
                                   FontSize="16"
                                   VerticalAlignment="Center"
                                   Text="/" />

                        <TextBlock Foreground="{DynamicResource DefaultForegroundBrush}"
                                   FontSize="16"
                                   VerticalAlignment="Center">
                            <TextBlock.Text>
                                <MultiBinding Converter="{StaticResource AmountToStringConverter}">
                                    <Binding Path="FeeInBase" Mode="OneWay" />
                                    <Binding Path="BaseCurrencyFormat" Mode="OneWay" />
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                    </StackPanel>

                    <TextBlock Grid.Column="0"
                               Grid.ColumnSpan="2"
                               Grid.Row="3"
                               Text="{Binding Warning}"
                               TextWrapping="Wrap"
                               FontSize="16"
                               Margin="0 3 0 0"
                               Foreground="{DynamicResource ErrorForegroundBrush}"
                               VerticalAlignment="Center" />

                    <TextBlock Grid.Column="0"
                               Grid.ColumnSpan="2"
                               Grid.Row="3"
                               Text="This baker is overdelegated. This means you can delegate to him, but you will not receive staking rewards from this baker."
                               TextWrapping="Wrap"
                               FontSize="16"
                               Margin="0 3 0 0"
                               Foreground="{DynamicResource WarningForegroundBrush}"
                               VerticalAlignment="Center">
                        <TextBlock.IsVisible>
                            <MultiBinding Converter="{x:Static BoolConverters.And}">
                                <Binding Path="Warning" Converter="{x:Static StringConverters.IsNullOrEmpty}" />
                                <Binding Path="ChoosenBakerIsOverdelegated" />
                            </MultiBinding>
                        </TextBlock.IsVisible>
                    </TextBlock>

                    <controls:RoundedButton Grid.Column="0"
                                            Grid.ColumnSpan="2"
                                            Grid.Row="4"
                                            Margin="0 25 0 44"
                                            Content="Confirm Delegation"
                                            Command="{Binding SendCommand}"
                                            Classes.Loading="{Binding IsSending}">
                        <controls:RoundedButton.IsEnabled>
                            <MultiBinding Converter="{x:Static BoolConverters.And}">
                                <Binding Path="Warning"
                                         Converter="{x:Static StringConverters.IsNullOrEmpty}" />
                                <Binding Path="IsChecking"
                                         Converter="{x:Static BoolConverters.Not}" />
                            </MultiBinding>
                        </controls:RoundedButton.IsEnabled>
                    </controls:RoundedButton>
                </Grid>
            </StackPanel>
        </StackPanel>
    </Border>
</UserControl>