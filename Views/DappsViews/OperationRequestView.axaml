<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:dappsViewModels="clr-namespace:Atomex.Client.Desktop.ViewModels.DappsViewModels"
             xmlns:controls="clr-namespace:Atomex.Client.Desktop.Controls"
             mc:Ignorable="d" d:DesignWidth="700" d:DesignHeight="750"
             x:Class="Atomex.Client.Desktop.Views.DappsViews.OperationRequestView"
             xmlns:asyncImageLoader="clr-namespace:AsyncImageLoader;assembly=AsyncImageLoader.Avalonia"
             xmlns:svg="clr-namespace:Avalonia.Svg.Skia;assembly=Avalonia.Svg.Skia"
             xmlns:services="clr-namespace:Atomex.Client.Desktop.Services"
             Width="700">
    <Design.DataContext>
        <dappsViewModels:OperationRequestViewModel />
    </Design.DataContext>
    
    <Border Classes="ChildViewBorder"
            Padding="0 0 0 60">
        <StackPanel>
            <Grid RowDefinitions="72,Auto">
                <TextBlock Grid.Row="0"
                           Foreground="{DynamicResource DefaultForegroundBrush}"
                           FontSize="22"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           Text="Operation Request" />
                <Border Grid.Row="1"
                        Height="1"
                        Background="{DynamicResource LightDefaultOpacity10}" />
            </Grid>

            <Grid ColumnDefinitions="130,*,130">
                <StackPanel Grid.Column="1"
                            Margin="0 32 0 0">
                    <Grid ColumnDefinitions="*,Auto,*">
                        <StackPanel Grid.Column="1"
                                    Orientation="Horizontal">
                            <Border Width="40"
                                    Height="40"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Left"
                                    ClipToBounds="True"
                                    CornerRadius="20"
                                    Classes.IsImageLoading="{Binding #DappPreviewImg.IsLoading}"
                                    Classes.ImageNotLoaded="{Binding #DappPreviewImg.CurrentImage,
                                            Converter={x:Static ObjectConverters.IsNull}}">
                                <asyncImageLoader:AdvancedImage Name="DappPreviewImg"
                                                                StretchDirection="Both"
                                                                Stretch="UniformToFill"
                                                                Source="{Binding DappLogo}"
                                                                Loader="{x:Static services:FileCacheImageLoader.Instance}" />
                            </Border>

                            <TextBlock Foreground="{DynamicResource SecondaryForegroundBrush}"
                                       Margin="12 0"
                                       TextWrapping="Wrap"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Center"
                                       Text="• • •" />
                            <svg:Svg Width="39"
                                     Path="/Resources/Icons/atomex-logo-round-white.svg" />
                        </StackPanel>
                    </Grid>

                    <TextBlock Foreground="{DynamicResource DefaultForegroundBrush}"
                               Margin="0 16 0 0"
                               FontSize="16"
                               LineHeight="24"
                               HorizontalAlignment="Center"
                               Text="{Binding SubTitle}" />

                    <Border Height="1"
                            Margin="0 24 0 0"
                            Background="{DynamicResource LightDefaultOpacity10}" />
                    <ListBox Background="Transparent"
                             Margin="0 0 -20 0"
                             Items="{Binding Operations}"
                             HorizontalAlignment="Stretch"
                             MaxHeight="300"
                             VirtualizationMode="None"
                             VerticalAlignment="Stretch">
                        <ListBox.Styles>
                            <Style Selector="ListBoxItem">
                                <Setter Property="Padding" Value="0 0 20 0" />
                            </Style>
                            <Style Selector="ListBoxItem:pointerover /template/ ContentPresenter">
                                <Setter Property="Background" Value="Transparent" />
                            </Style>
                            <Style Selector="ListBoxItem:not(:pointerover) /template/ ContentPresenter">
                                <Setter Property="Background" Value="Transparent" />
                            </Style>
                        </ListBox.Styles>
                        <ListBox.ItemTemplate>
                            <controls:BeaconOperationTemplateSelector />
                        </ListBox.ItemTemplate>
                    </ListBox>

                    <Grid ColumnDefinitions="*,16,*"
                          Margin="0 16 0 0">
                        <controls:RoundedButton Grid.Column="0"
                                                Classes="GrayButton"
                                                Content="Reject"
                                                Command="{Binding OnRejectCommand}"
                                                Classes.Loading="{Binding IsRejecting}" />
                        <controls:RoundedButton Grid.Column="2"
                                                Content="Confirm"
                                                Command="{Binding OnConfirmCommand}"
                                                Classes.Loading="{Binding IsSending}" />
                    </Grid>
                </StackPanel>
            </Grid>
        </StackPanel>
    </Border>
</UserControl>