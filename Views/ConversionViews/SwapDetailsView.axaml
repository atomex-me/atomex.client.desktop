<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             mc:Ignorable="d" d:DesignWidth="360" d:DesignHeight="800"
             xmlns:vm="clr-namespace:Atomex.Client.Desktop.ViewModels"
             xmlns:i="clr-namespace:Avalonia.Xaml.Interactivity;assembly=Avalonia.Xaml.Interactivity"
             xmlns:ia="clr-namespace:Avalonia.Xaml.Interactions.Core;assembly=Avalonia.Xaml.Interactions"
             xmlns:converters="clr-namespace:Atomex.Client.Desktop.Converters"
             xmlns:controls="clr-namespace:Atomex.Client.Desktop.Controls"
             xmlns:svg="clr-namespace:Avalonia.Svg.Skia;assembly=Avalonia.Svg.Skia"
             x:Class="Atomex.Client.Desktop.Views.SwapDetailsView">
    <Design.DataContext>
        <vm:SwapDetailsViewModel />
    </Design.DataContext>

    <UserControl.Resources>
        <SolidColorBrush x:Key="PrimaryTextColor" Color="{DynamicResource LightDefault}" />
        <SolidColorBrush x:Key="SecondaryTextColor" Color="DarkGray" />
        <converters:DateTimeToTxTimeConverter x:Key="DateTimeToTxTimeConverter" />
    </UserControl.Resources>

    <UserControl.Styles>
        <Style Selector="TabControl">
            <Setter Property="Margin" Value="0" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="Background" Value="{DynamicResource AlmostTransparentBrush}" />
            <Setter Property="Template">
                <ControlTemplate>
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="0"
                            Background="{TemplateBinding Background}"
                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalAlignment}">
                        <DockPanel>
                            <StackPanel Orientation="Vertical"
                                        DockPanel.Dock="{TemplateBinding TabStripPlacement}">
                                <Border
                                    BorderThickness="0 1 0 1"
                                    BorderBrush="{StaticResource LightDefaultOpacity50}">
                                    <ItemsPresenter Name="PART_ItemsPresenter"
                                                    HorizontalAlignment="Center"
                                                    Items="{TemplateBinding Items}"
                                                    ItemsPanel="{TemplateBinding ItemsPanel}"
                                                    Margin="0"
                                                    ItemTemplate="{TemplateBinding ItemTemplate}" />
                                </Border>
                            </StackPanel>
                            <ContentPresenter Name="PART_SelectedContentHost"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Content="{TemplateBinding SelectedContent}"
                                              ContentTemplate="{TemplateBinding SelectedContentTemplate}" />
                        </DockPanel>
                    </Border>
                </ControlTemplate>
            </Setter>
        </Style>
        <Style Selector="TabItem">
            <Setter Property="Foreground" Value="{DynamicResource LightDefaultOpacity50}" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <ControlTemplate>
                    <Border Name="PART_LayoutRoot"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="0"
                            Padding="{TemplateBinding Padding}">
                        <Panel>
                            <ContentPresenter Name="PART_ContentPresenter"
                                              ContentTemplate="{TemplateBinding HeaderTemplate}"
                                              Content="{TemplateBinding Header}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              TextBlock.FontFamily="{TemplateBinding FontFamily}"
                                              TextBlock.FontSize="{TemplateBinding FontSize}"
                                              TextBlock.FontWeight="{TemplateBinding FontWeight}" />
                            <Border Name="PART_SelectedPipe"
                                    Margin="0"
                                    Background="{StaticResource PrimaryTextColor}" />
                        </Panel>
                    </Border>
                </ControlTemplate>
            </Setter>
        </Style>

        <Style Selector="TabItem:selected">
            <Setter Property="TextBlock.Foreground" Value="{StaticResource PrimaryTextColor}" />
        </Style>

        <!-- PointerOver state -->
        <Style Selector="TabItem:pointerover /template/ Border#PART_LayoutRoot">
            <Setter Property="TextBlock.Foreground" Value="{DynamicResource LightDefaultOpacity20}" />
        </Style>

        <!-- Selected PointerOver state -->
        <Style Selector="TabItem:selected:pointerover /template/ Border#PART_LayoutRoot">
            <Setter Property="TextBlock.Foreground" Value="{StaticResource PrimaryTextColor}" />
        </Style>
    </UserControl.Styles>

    <Border Background="{DynamicResource RightPopupBackgroundBrush}"
            Classes="NoCloseRightPopup">
        <StackPanel Orientation="Vertical">
            <controls:IconButton Classes="Close"
                                 HorizontalAlignment="Left"
                                 Margin="25 25 0 0"
                                 Command="{Binding CloseCommand}" />

            <svg:Svg Name="SwapStatusIcon"
                     Width="40"
                     Margin="0 22 0 0">
                <i:Interaction.Behaviors>
                    <ia:DataTriggerBehavior Binding="{Binding CompactState}"
                                            ComparisonCondition="Equal"
                                            Value="{Binding InProgress}">
                        <ia:ChangePropertyAction TargetObject="{Binding #SwapStatusIcon}"
                                                 PropertyName="Path"
                                                 Value="/Resources/Icons/pending-hourglass.svg" />
                    </ia:DataTriggerBehavior>
                    <ia:DataTriggerBehavior Binding="{Binding CompactState}"
                                            ComparisonCondition="Equal"
                                            Value="{Binding Completed}">
                        <ia:ChangePropertyAction TargetObject="{Binding #SwapStatusIcon}"
                                                 PropertyName="Path"
                                                 Value="/Resources/Icons/completed-checkbox.svg" />
                    </ia:DataTriggerBehavior>
                    <ia:DataTriggerBehavior Binding="{Binding CompactState}"
                                            ComparisonCondition="Equal"
                                            Value="{Binding Cancelled}">
                        <ia:ChangePropertyAction TargetObject="{Binding #SwapStatusIcon}"
                                                 PropertyName="Path"
                                                 Value="/Resources/Icons/cancelled-cross.svg" />
                    </ia:DataTriggerBehavior>
                    <ia:DataTriggerBehavior Binding="{Binding CompactState}"
                                            ComparisonCondition="Equal"
                                            Value="{Binding Refunded}">
                        <ia:ChangePropertyAction TargetObject="{Binding #SwapStatusIcon}"
                                                 PropertyName="Path"
                                                 Value="/Resources/Icons/cancelled-cross.svg" />
                    </ia:DataTriggerBehavior>
                    <ia:DataTriggerBehavior Binding="{Binding CompactState}"
                                            ComparisonCondition="Equal"
                                            Value="{Binding Unsettled}">
                        <ia:ChangePropertyAction TargetObject="{Binding #SwapStatusIcon}"
                                                 PropertyName="Path"
                                                 Value="/Resources/Icons/cancelled-cross.svg" />
                    </ia:DataTriggerBehavior>
                </i:Interaction.Behaviors>
            </svg:Svg>

            <TextBlock Name="SwapCompactStateTitle"
                       Text="{Binding SwapCompactStateTitle}"
                       Foreground="{DynamicResource DefaultForegroundBrush}"
                       TextAlignment="Center"
                       HorizontalAlignment="Center"
                       FontSize="22"
                       LineHeight="32"
                       Margin="0 10 0 0">
                <i:Interaction.Behaviors>
                    <ia:DataTriggerBehavior Binding="{Binding CompactState}"
                                            ComparisonCondition="Equal"
                                            Value="{Binding InProgress}">
                        <ia:ChangePropertyAction TargetObject="{Binding #SwapCompactStateTitle}"
                                                 PropertyName="Foreground"
                                                 Value="{StaticResource PrimaryTextColor}" />
                    </ia:DataTriggerBehavior>
                    <ia:DataTriggerBehavior Binding="{Binding CompactState}"
                                            ComparisonCondition="Equal"
                                            Value="{Binding Completed}">
                        <ia:ChangePropertyAction TargetObject="{Binding #SwapCompactStateTitle}"
                                                 PropertyName="Foreground"
                                                 Value="{StaticResource Emerald}" />
                    </ia:DataTriggerBehavior>
                    <ia:DataTriggerBehavior Binding="{Binding CompactState}"
                                            ComparisonCondition="Equal"
                                            Value="{Binding Cancelled}">
                        <ia:ChangePropertyAction TargetObject="{Binding #SwapCompactStateTitle}"
                                                 PropertyName="Foreground"
                                                 Value="{StaticResource DarkRed}" />
                    </ia:DataTriggerBehavior>
                    <ia:DataTriggerBehavior Binding="{Binding CompactState}"
                                            ComparisonCondition="Equal"
                                            Value="{Binding Refunded}">
                        <ia:ChangePropertyAction TargetObject="{Binding #SwapCompactStateTitle}"
                                                 PropertyName="Foreground"
                                                 Value="{StaticResource DarkRed}" />
                    </ia:DataTriggerBehavior>
                    <ia:DataTriggerBehavior Binding="{Binding CompactState}"
                                            ComparisonCondition="Equal"
                                            Value="{Binding Unsettled}">
                        <ia:ChangePropertyAction TargetObject="{Binding #SwapCompactStateTitle}"
                                                 PropertyName="Foreground"
                                                 Value="{StaticResource DarkRed}" />
                    </ia:DataTriggerBehavior>
                </i:Interaction.Behaviors>
            </TextBlock>

            <TextBlock Name="SwapCompactStateDescription"
                       Text="{Binding SwapCompactStateDescription}"
                       TextAlignment="Center"
                       FontSize="13"
                       Margin="0 6 0 0"
                       TextWrapping="Wrap"
                       HorizontalAlignment="Center">
                <i:Interaction.Behaviors>
                    <ia:DataTriggerBehavior Binding="{Binding CompactState}"
                                            ComparisonCondition="Equal"
                                            Value="{Binding InProgress}">
                        <ia:ChangePropertyAction TargetObject="{Binding #SwapCompactStateDescription}"
                                                 PropertyName="Foreground"
                                                 Value="{StaticResource DarkRed}" />
                    </ia:DataTriggerBehavior>
                    <ia:DataTriggerBehavior Binding="{Binding CompactState}"
                                            ComparisonCondition="Equal"
                                            Value="{Binding Completed}">
                        <ia:ChangePropertyAction TargetObject="{Binding #SwapCompactStateDescription}"
                                                 PropertyName="IsVisible"
                                                 Value="false" />
                    </ia:DataTriggerBehavior>
                    <ia:DataTriggerBehavior Binding="{Binding CompactState}"
                                            ComparisonCondition="Equal"
                                            Value="{Binding Cancelled}">
                        <ia:ChangePropertyAction TargetObject="{Binding #SwapCompactStateDescription}"
                                                 PropertyName="IsVisible"
                                                 Value="false" />
                    </ia:DataTriggerBehavior>
                    <ia:DataTriggerBehavior Binding="{Binding CompactState}"
                                            ComparisonCondition="Equal"
                                            Value="{Binding Refunded}">
                        <ia:ChangePropertyAction TargetObject="{Binding #SwapCompactStateDescription}"
                                                 PropertyName="Foreground"
                                                 Value="{StaticResource SecondaryTextColor}" />
                    </ia:DataTriggerBehavior>
                    <ia:DataTriggerBehavior Binding="{Binding CompactState}"
                                            ComparisonCondition="Equal"
                                            Value="{Binding Unsettled}">
                        <ia:ChangePropertyAction TargetObject="{Binding #SwapCompactStateDescription}"
                                                 PropertyName="Foreground"
                                                 Value="{StaticResource SecondaryTextColor}" />
                    </ia:DataTriggerBehavior>
                </i:Interaction.Behaviors>
            </TextBlock>

            <Grid Margin="0 32 0 40" ColumnDefinitions="40,*,16,*,40" RowDefinitions="Auto,Auto,Auto">
                <svg:Svg Grid.Column="1"
                         Grid.Row="0"
                         Width="50"
                         Path="{Binding FromCurrencyViewModel.IconPath}" />

                <Path Width="14"
                      Height="14"
                      Stretch="None"
                      Grid.Column="2"
                      Grid.Row="0"
                      Grid.RowSpan="2"
                      Data="{DynamicResource SwapArrows}"
                      Fill="{DynamicResource LightDefaultOpacity50}" />

                <svg:Svg Grid.Column="3"
                         Grid.Row="0"
                         Width="50"
                         Path="{Binding ToCurrencyViewModel.IconPath}" />

                <TextBlock Text="{Binding FromCurrencyCode}"
                           Foreground="{DynamicResource ChildViewHeaderForegroundBrush}"
                           FontFamily="{DynamicResource DefaultLightFontFamily}"
                           FontSize="18"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           Margin="0 12 0 2"
                           Grid.Column="1"
                           Grid.Row="1" />

                <TextBlock Text="{Binding ToCurrencyCode}"
                           Foreground="{DynamicResource ChildViewHeaderForegroundBrush}"
                           FontFamily="{DynamicResource DefaultLightFontFamily}"
                           FontSize="18"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           Margin="0 12 0 3"
                           Grid.Column="3"
                           Grid.Row="1" />

                <TextBlock Grid.Column="1"
                           Grid.Row="2"
                           HorizontalAlignment="Center"
                           FontFamily="{DynamicResource DefaultLightFontFamily}"
                           FontSize="13"
                           Foreground="{StaticResource LightDefaultOpacity50}">
                    <TextBlock.Text>
                        <MultiBinding Converter="{StaticResource AmountToStringConverter}">
                            <Binding Path="FromAmount" Mode="OneWay" />
                            <Binding Path="FromAmountFormat" Mode="OneWay" />
                        </MultiBinding>
                    </TextBlock.Text>
                </TextBlock>

                <TextBlock Grid.Column="3"
                           Grid.Row="2"
                           HorizontalAlignment="Center"
                           FontFamily="{DynamicResource DefaultLightFontFamily}"
                           FontSize="13"
                           Foreground="{StaticResource LightDefaultOpacity50}">
                    <TextBlock.Text>
                        <MultiBinding Converter="{StaticResource AmountToStringConverter}">
                            <Binding Path="ToAmount" Mode="OneWay" />
                            <Binding Path="ToAmountFormat" Mode="OneWay" />
                        </MultiBinding>
                    </TextBlock.Text>
                </TextBlock>
            </Grid>

            <TabControl Padding="15 30 0 0">
                <TabItem Margin="0 0 23 0">
                    <TabItem.Header>
                        <TextBlock VerticalAlignment="Center"
                                   FontSize="13"
                                   Text="Progress" />
                    </TabItem.Header>
                    <Grid ColumnDefinitions="32,*" RowDefinitions="96,96,96">
                        <StackPanel
                            Grid.Row="0"
                            Grid.Column="0"
                            Orientation="Vertical">
                            <svg:Svg Width="17"
                                     HorizontalAlignment="Left"
                                     Classes="InProgress"
                                     Path="/Resources/Icons/in-progress.svg"
                                     IsVisible="{Binding InitializationStepInProgress}" />
                            <svg:Svg Name="InitializationIcon"
                                     IsVisible="{Binding !InitializationStepInProgress}"
                                     Width="17"
                                     HorizontalAlignment="Left">
                                <i:Interaction.Behaviors>
                                    <ia:DataTriggerBehavior Binding="{Binding InitializationStepStatus}"
                                                            ComparisonCondition="Equal"
                                                            Value="{Binding ToBeDoneState}">
                                        <ia:ChangePropertyAction TargetObject="{Binding #InitializationIcon}"
                                                                 PropertyName="Path"
                                                                 Value="/Resources/Icons/swap-empty.svg" />
                                    </ia:DataTriggerBehavior>
                                    <ia:DataTriggerBehavior Binding="{Binding InitializationStepStatus}"
                                                            ComparisonCondition="Equal"
                                                            Value="{Binding CompletedState}">
                                        <ia:ChangePropertyAction TargetObject="{Binding #InitializationIcon}"
                                                                 PropertyName="Path"
                                                                 Value="/Resources/Icons/completed-checkbox.svg" />
                                    </ia:DataTriggerBehavior>
                                    <ia:DataTriggerBehavior Binding="{Binding InitializationStepStatus}"
                                                            ComparisonCondition="Equal"
                                                            Value="{Binding FailedState}">
                                        <ia:ChangePropertyAction TargetObject="{Binding #InitializationIcon}"
                                                                 PropertyName="Path"
                                                                 Value="/Resources/Icons/failed.svg" />
                                    </ia:DataTriggerBehavior>
                                </i:Interaction.Behaviors>
                            </svg:Svg>


                            <svg:Svg Name="FirstProgressLine"
                                     Height="60"
                                     HorizontalAlignment="Left"
                                     Margin="8 10 0 10">
                                <i:Interaction.Behaviors>
                                    <ia:DataTriggerBehavior Binding="{Binding InitializationStepStatus}"
                                                            ComparisonCondition="NotEqual"
                                                            Value="{Binding CompletedState}">
                                        <ia:ChangePropertyAction TargetObject="{Binding #FirstProgressLine}"
                                                                 PropertyName="Path"
                                                                 Value="/Resources/Icons/swap-line-inprogress.svg" />
                                    </ia:DataTriggerBehavior>
                                    <ia:DataTriggerBehavior Binding="{Binding InitializationStepStatus}"
                                                            ComparisonCondition="Equal"
                                                            Value="{Binding CompletedState}">
                                        <ia:ChangePropertyAction TargetObject="{Binding #FirstProgressLine}"
                                                                 PropertyName="Path"
                                                                 Value="/Resources/Icons/swap-line-success.svg" />
                                    </ia:DataTriggerBehavior>
                                </i:Interaction.Behaviors>
                            </svg:Svg>
                        </StackPanel>
                        <StackPanel
                            Grid.Row="1"
                            Grid.Column="0"
                            Orientation="Vertical">
                            <svg:Svg Width="17"
                                     HorizontalAlignment="Left"
                                     Classes="InProgress"
                                     Path="/Resources/Icons/in-progress.svg"
                                     IsVisible="{Binding ExchangingStepInProgress}" />
                            <svg:Svg Name="ExchangingIcon"
                                     IsVisible="{Binding !ExchangingStepInProgress}"
                                     Width="17"
                                     HorizontalAlignment="Left">
                                <i:Interaction.Behaviors>
                                    <ia:DataTriggerBehavior Binding="{Binding ExchangingStepStatus}"
                                                            ComparisonCondition="Equal"
                                                            Value="{Binding ToBeDoneState}">
                                        <ia:ChangePropertyAction TargetObject="{Binding #ExchangingIcon}"
                                                                 PropertyName="Path"
                                                                 Value="/Resources/Icons/swap-empty.svg" />
                                    </ia:DataTriggerBehavior>
                                    <ia:DataTriggerBehavior Binding="{Binding ExchangingStepStatus}"
                                                            ComparisonCondition="Equal"
                                                            Value="{Binding CompletedState}">
                                        <ia:ChangePropertyAction TargetObject="{Binding #ExchangingIcon}"
                                                                 PropertyName="Path"
                                                                 Value="/Resources/Icons/completed-checkbox.svg" />
                                    </ia:DataTriggerBehavior>
                                    <ia:DataTriggerBehavior Binding="{Binding ExchangingStepStatus}"
                                                            ComparisonCondition="Equal"
                                                            Value="{Binding FailedState}">
                                        <ia:ChangePropertyAction TargetObject="{Binding #ExchangingIcon}"
                                                                 PropertyName="Path"
                                                                 Value="/Resources/Icons/failed.svg" />
                                    </ia:DataTriggerBehavior>
                                </i:Interaction.Behaviors>
                            </svg:Svg>

                            <svg:Svg Name="SecondProgressLine"
                                     Height="60"
                                     HorizontalAlignment="Left"
                                     Margin="8 10 0 10">

                                <i:Interaction.Behaviors>
                                    <ia:DataTriggerBehavior Binding="{Binding ExchangingStepStatus}"
                                                            ComparisonCondition="NotEqual"
                                                            Value="{Binding CompletedState}">
                                        <ia:ChangePropertyAction TargetObject="{Binding #SecondProgressLine}"
                                                                 PropertyName="Path"
                                                                 Value="/Resources/Icons/swap-line-inprogress.svg" />
                                    </ia:DataTriggerBehavior>
                                    <ia:DataTriggerBehavior Binding="{Binding ExchangingStepStatus}"
                                                            ComparisonCondition="Equal"
                                                            Value="{Binding CompletedState}">
                                        <ia:ChangePropertyAction TargetObject="{Binding #SecondProgressLine}"
                                                                 PropertyName="Path"
                                                                 Value="/Resources/Icons/swap-line-success.svg" />
                                    </ia:DataTriggerBehavior>
                                </i:Interaction.Behaviors>
                            </svg:Svg>
                        </StackPanel>
                        <StackPanel
                            Grid.Row="2"
                            Grid.Column="0"
                            Orientation="Vertical">
                            <svg:Svg Width="17"
                                     HorizontalAlignment="Left"
                                     Classes="InProgress"
                                     Path="/Resources/Icons/in-progress.svg"
                                     IsVisible="{Binding CompletionStepInProgress}" />
                            <svg:Svg Name="CompletionIcon"
                                     IsVisible="{Binding !CompletionStepInProgress}"
                                     Width="17"
                                     HorizontalAlignment="Left">
                                <i:Interaction.Behaviors>
                                    <ia:DataTriggerBehavior Binding="{Binding CompletionStepStatus}"
                                                            ComparisonCondition="Equal"
                                                            Value="{Binding ToBeDoneState}">
                                        <ia:ChangePropertyAction TargetObject="{Binding #CompletionIcon}"
                                                                 PropertyName="Path"
                                                                 Value="/Resources/Icons/swap-empty.svg" />
                                    </ia:DataTriggerBehavior>
                                    <ia:DataTriggerBehavior Binding="{Binding CompletionStepStatus}"
                                                            ComparisonCondition="Equal"
                                                            Value="{Binding CompletedState}">
                                        <ia:ChangePropertyAction TargetObject="{Binding #CompletionIcon}"
                                                                 PropertyName="Path"
                                                                 Value="/Resources/Icons/completed-checkbox.svg" />
                                    </ia:DataTriggerBehavior>
                                    <ia:DataTriggerBehavior Binding="{Binding CompletionStepStatus}"
                                                            ComparisonCondition="Equal"
                                                            Value="{Binding FailedState}">
                                        <ia:ChangePropertyAction TargetObject="{Binding #CompletionIcon}"
                                                                 PropertyName="Path"
                                                                 Value="/Resources/Icons/failed.svg" />
                                    </ia:DataTriggerBehavior>
                                </i:Interaction.Behaviors>
                            </svg:Svg>
                        </StackPanel>

                        <StackPanel
                            Grid.Row="0"
                            Grid.Column="1"
                            Orientation="Vertical">
                            <TextBlock Text="Initialization"
                                       Foreground="{StaticResource PrimaryTextColor}"
                                       FontFamily="{DynamicResource DefaultLightFontFamily}"
                                       FontSize="20"
                                       Margin="0 0 0 4"
                                       HorizontalAlignment="Left"
                                       VerticalAlignment="Center" />

                            <TextBlock Text="{Binding InitializationFirstStepDescription}"
                                       TextWrapping="Wrap"
                                       Margin="0 0 0 2"
                                       Foreground="{StaticResource LightDefaultOpacity50}"
                                       FontFamily="{DynamicResource DefaultLightFontFamily}"
                                       FontSize="13"
                                       HorizontalAlignment="Left"
                                       VerticalAlignment="Center" />

                            <TextBlock Text="{Binding InitializationSecondStepDescription}"
                                       IsVisible="{Binding InitializationSecondStepDescription, Converter={x:Static StringConverters.IsNotNullOrEmpty}}"
                                       TextWrapping="Wrap"
                                       Foreground="{StaticResource LightDefaultOpacity50}"
                                       FontFamily="{DynamicResource DefaultLightFontFamily}"
                                       FontSize="13"
                                       HorizontalAlignment="Left"
                                       VerticalAlignment="Center" />
                        </StackPanel>
                        <StackPanel
                            Grid.Row="1"
                            Grid.Column="1"
                            Orientation="Vertical">
                            <TextBlock Text="Exchanging"
                                       Foreground="{StaticResource PrimaryTextColor}"
                                       FontFamily="{DynamicResource DefaultLightFontFamily}"
                                       FontSize="20"
                                       Margin="0 0 0 4"
                                       HorizontalAlignment="Left"
                                       VerticalAlignment="Center" />

                            <WrapPanel Margin="0 0 0 2"
                                       IsVisible="{Binding ExchangingFirstStepDescription, Converter={x:Static StringConverters.IsNotNullOrEmpty}}">
                                <TextBlock Text="{Binding ExchangingFirstStepDescription}"
                                           TextWrapping="Wrap"
                                           Margin="0 0 4 0"
                                           Foreground="{StaticResource LightDefaultOpacity50}"
                                           FontFamily="{DynamicResource DefaultLightFontFamily}"
                                           FontSize="13"
                                           HorizontalAlignment="Left"
                                           VerticalAlignment="Center" />

                                <controls:LinkButton Classes="Emerald"
                                                     IsVisible="{Binding ExchangingFirstStepLinkUrl, Converter={x:Static StringConverters.IsNotNullOrEmpty}}"
                                                     Command="{Binding OpenTxInExplorerCommand}"
                                                     CommandParameter="{Binding ExchangingFirstStepLinkUrl}"
                                                     Content="{Binding ExchangingFirstStepLinkText}"
                                                     ToolText="{Binding ExchangingFirstStepLinkUrl}" />

                                <TextBlock Text="{Binding ExchangingFirstStepLinkText}"
                                           IsVisible="{Binding ExchangingFirstStepLinkUrl, Converter={x:Static StringConverters.IsNullOrEmpty}}"
                                           TextWrapping="Wrap"
                                           Foreground="{StaticResource LightDefaultOpacity50}"
                                           FontFamily="{DynamicResource DefaultLightFontFamily}"
                                           FontSize="13"
                                           HorizontalAlignment="Left"
                                           VerticalAlignment="Center" />
                            </WrapPanel>

                            <WrapPanel
                                IsVisible="{Binding ExchangingSecondStepDescription, Converter={x:Static StringConverters.IsNotNullOrEmpty}}">
                                <TextBlock Text="{Binding ExchangingSecondStepDescription}"
                                           TextWrapping="Wrap"
                                           Margin="0 0 4 0"
                                           Foreground="{StaticResource LightDefaultOpacity50}"
                                           FontFamily="{DynamicResource DefaultLightFontFamily}"
                                           FontSize="13"
                                           HorizontalAlignment="Left"
                                           VerticalAlignment="Center" />

                                <controls:LinkButton Classes="Emerald"
                                                     IsVisible="{Binding ExchangingSecondStepLinkUrl, Converter={x:Static StringConverters.IsNotNullOrEmpty}}"
                                                     Command="{Binding OpenTxInExplorerCommand}"
                                                     CommandParameter="{Binding ExchangingSecondStepLinkUrl}"
                                                     Content="{Binding ExchangingSecondStepLinkText}"
                                                     ToolText="{Binding ExchangingSecondStepLinkUrl}" />

                                <TextBlock Text="{Binding ExchangingSecondStepLinkText}"
                                           IsVisible="{Binding ExchangingSecondStepLinkUrl, Converter={x:Static StringConverters.IsNullOrEmpty}}"
                                           TextWrapping="Wrap"
                                           Foreground="{StaticResource LightDefaultOpacity50}"
                                           FontFamily="{DynamicResource DefaultLightFontFamily}"
                                           FontSize="13"
                                           HorizontalAlignment="Left"
                                           VerticalAlignment="Center" />
                            </WrapPanel>
                        </StackPanel>
                        <StackPanel
                            Grid.Row="2"
                            Grid.Column="1"
                            Orientation="Vertical">
                            <TextBlock Text="Completion"
                                       Foreground="{StaticResource PrimaryTextColor}"
                                       FontFamily="{DynamicResource DefaultLightFontFamily}"
                                       FontSize="20"
                                       Margin="0 0 0 4"
                                       HorizontalAlignment="Left"
                                       VerticalAlignment="Center" />

                            <WrapPanel Margin="0 0 0 2"
                                       IsVisible="{Binding CompletionFirstStepDescription, Converter={x:Static StringConverters.IsNotNullOrEmpty}}">
                                <TextBlock Text="{Binding CompletionFirstStepDescription}"
                                           TextWrapping="Wrap"
                                           Margin="0 0 4 0"
                                           Foreground="{StaticResource LightDefaultOpacity50}"
                                           FontFamily="{DynamicResource DefaultLightFontFamily}"
                                           FontSize="13"
                                           HorizontalAlignment="Left"
                                           VerticalAlignment="Center" />

                                <controls:LinkButton Classes="Emerald"
                                                     IsVisible="{Binding CompletionFirstStepLinkUrl, Converter={x:Static StringConverters.IsNotNullOrEmpty}}"
                                                     Command="{Binding OpenTxInExplorerCommand}"
                                                     CommandParameter="{Binding CompletionFirstStepLinkUrl}"
                                                     Content="{Binding CompletionFirstStepLinkText}"
                                                     ToolText="{Binding CompletionFirstStepLinkUrl}" />

                                <TextBlock Text="{Binding CompletionFirstStepLinkText}"
                                           IsVisible="{Binding CompletionFirstStepLinkUrl, Converter={x:Static StringConverters.IsNullOrEmpty}}"
                                           TextWrapping="Wrap"
                                           Foreground="{StaticResource LightDefaultOpacity50}"
                                           FontFamily="{DynamicResource DefaultLightFontFamily}"
                                           FontSize="13"
                                           HorizontalAlignment="Left"
                                           VerticalAlignment="Center" />
                            </WrapPanel>
                            <WrapPanel
                                IsVisible="{Binding CompletionSecondStepDescription, Converter={x:Static StringConverters.IsNotNullOrEmpty}}">
                                <TextBlock Text="{Binding CompletionSecondStepDescription}"
                                           TextWrapping="Wrap"
                                           Margin="0 0 4 0"
                                           Foreground="{StaticResource LightDefaultOpacity50}"
                                           FontFamily="{DynamicResource DefaultLightFontFamily}"
                                           FontSize="13"
                                           HorizontalAlignment="Left"
                                           VerticalAlignment="Center" />

                                <controls:LinkButton Classes="Emerald"
                                                     IsVisible="{Binding CompletionSecondStepLinkUrl, Converter={x:Static StringConverters.IsNotNullOrEmpty}}"
                                                     Command="{Binding OpenTxInExplorerCommand}"
                                                     CommandParameter="{Binding CompletionSecondStepLinkUrl}"
                                                     Content="{Binding CompletionSecondStepLinkText}"
                                                     ToolText="{Binding CompletionSecondStepLinkUrl}" />

                                <TextBlock Text="{Binding CompletionSecondStepLinkText}"
                                           IsVisible="{Binding CompletionSecondStepLinkUrl, Converter={x:Static StringConverters.IsNullOrEmpty}}"
                                           TextWrapping="Wrap"
                                           Foreground="{StaticResource LightDefaultOpacity50}"
                                           FontFamily="{DynamicResource DefaultLightFontFamily}"
                                           FontSize="13"
                                           HorizontalAlignment="Left"
                                           VerticalAlignment="Center" />
                            </WrapPanel>
                        </StackPanel>
                    </Grid>
                </TabItem>
                <TabItem Margin="23 0 0 0">
                    <TabItem.Header>
                        <TextBlock VerticalAlignment="Center"
                                   FontSize="13"
                                   Text="Details" />
                    </TabItem.Header>
                    <Grid ColumnDefinitions="Auto,*" RowDefinitions="30,30">
                        <TextBlock Grid.Column="0"
                                   Grid.Row="0"
                                   Text="Price:"
                                   Foreground="{StaticResource LightDefaultOpacity50}"
                                   FontSize="15" />

                        <TextBlock Grid.Column="1"
                                   Grid.Row="0"
                                   Margin="0 0 15 0"
                                   Text="{Binding Price}"
                                   Foreground="{StaticResource PrimaryTextColor}"
                                   HorizontalAlignment="Right"
                                   FontSize="15" />

                        <TextBlock Grid.Column="0"
                                   Grid.Row="1"
                                   Text="Date:"
                                   Foreground="{StaticResource LightDefaultOpacity50}"
                                   FontSize="15" />

                        <TextBlock Grid.Column="1"
                                   Grid.Row="1"
                                   Margin="0 0 15 0"
                                   Text="{Binding TimeStamp, Converter={StaticResource DateTimeToTxTimeConverter}}"
                                   Foreground="{StaticResource PrimaryTextColor}"
                                   HorizontalAlignment="Right"
                                   FontSize="15" />
                    </Grid>
                </TabItem>
            </TabControl>
        </StackPanel>
    </Border>
</UserControl>