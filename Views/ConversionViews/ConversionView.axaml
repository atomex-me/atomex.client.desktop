<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             mc:Ignorable="d" d:DesignWidth="1200" d:DesignHeight="1000"
             x:Class="Atomex.Client.Desktop.Views.ConversionView"
             xmlns:vm="clr-namespace:Atomex.Client.Desktop.ViewModels"
             xmlns:views="clr-namespace:Atomex.Client.Desktop.Views"
             xmlns:helpers="clr-namespace:Atomex.Client.Desktop.Helpers"
             xmlns:controls="clr-namespace:Atomex.Client.Desktop.Controls"
             xmlns:converters="clr-namespace:Atomex.Client.Desktop.Converters"
             xmlns:styles="clr-namespace:Atomex.Client.Desktop.Styles"
             xmlns:svg="clr-namespace:Avalonia.Svg.Skia;assembly=Avalonia.Svg.Skia"
             xmlns:i="clr-namespace:Avalonia.Xaml.Interactivity;assembly=Avalonia.Xaml.Interactivity"
             xmlns:ia="clr-namespace:Avalonia.Xaml.Interactions.Core;assembly=Avalonia.Xaml.Interactions">

  <Design.DataContext>
    <vm:ConversionViewModel/>
  </Design.DataContext>
  <UserControl.Styles>
    <Style Selector="TextBlock.HeaderFieldTextBlockStyle">
      <Setter Property="Margin" Value="0 0 10 0"/>
      <Setter Property="Foreground" Value="{DynamicResource DefaultForegroundBrush}"/>
      <Setter Property="FontFamily" Value="{DynamicResource DefaultMediumFontFamily}"/>
      <Setter Property="FontSize" Value="15"/>
      <Setter Property="VerticalAlignment" Value="Center"/>
      <Setter Property="HorizontalAlignment" Value="Right"/>
    </Style>
  </UserControl.Styles>

  <UserControl.Resources>
    <converters:AmountToStringConverter x:Key="AmountToStringConverter"/>
    <converters:DateTimeToTxTimeConverter x:Key="DateTimeToTxTimeConverter"/>
  </UserControl.Resources>

  <Grid Background="{DynamicResource ChildViewBackgroundBrush}">
    <Grid.RowDefinitions>
      <RowDefinition Height="Auto"/>
      <RowDefinition Height="Auto"/>
      <RowDefinition Height="*"/>
    </Grid.RowDefinitions>

    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="*"/>
      <ColumnDefinition Width="360"/>
    </Grid.ColumnDefinitions>
      
    <StackPanel Orientation="Vertical"
                Grid.ColumnSpan="{Binding ColumnSpan}"
                Grid.Column="0"
                Grid.Row="0">

      <TextBlock Margin="0 80 0 32"
                 Text="Exchange"
                 FontSize="32"
                 FontFamily="{DynamicResource DefaultLightFontFamily}"
                 HorizontalAlignment="Center"
                 Foreground="{DynamicResource DefaultForegroundBrush}"/>

      <!-- From currency view -->
      <views:ConversionCurrencyView Width="486"
                                   Height="102"
                                   DataContext="{Binding FromViewModel}"/>

      <!-- Warning and swap currencies button view -->
      <Grid Width="486">
        <StackPanel Orientation="Horizontal"
                    Margin="0 12 0 24"
                    HorizontalAlignment="Left"
                    IsVisible="{Binding FromValidationMessage, Converter={x:Static StringConverters.IsNotNullOrEmpty}}">
          <TextBlock Text="{Binding FromValidationMessage}"
                     MaxWidth="471"
                     TextWrapping="Wrap"
                     Foreground="{DynamicResource LightDefaultOpacity50}"
                     FontSize="13"
                     FontFamily="{DynamicResource DefaultLightFontFamily}">
            <i:Interaction.Behaviors>
              <ia:DataTriggerBehavior Binding="{Binding FromValidationMessageType}"
                                      ComparisonCondition="Equal"
                                      Value="Warning">
                <ia:ChangePropertyAction TargetObject="{Binding self}"
                                         PropertyName="Foreground"
                                         Value="{DynamicResource Orange}"/>
              </ia:DataTriggerBehavior>
              <ia:DataTriggerBehavior Binding="{Binding FromValidationMessageType}"
                                      ComparisonCondition="Equal"
                                      Value="Error">
                <ia:ChangePropertyAction TargetObject="{Binding self}"
                                         PropertyName="Foreground"
                                         Value="{DynamicResource DarkRed}"/>
              </ia:DataTriggerBehavior>
            </i:Interaction.Behaviors>          
          </TextBlock>
          <Button Padding="3"
                  VerticalAlignment="Center"
                  VerticalContentAlignment="Center"
                  ToolTip.Tip="{Binding FromValidationMessageToolTip}"
                  ToolTip.Placement="AnchorAndGravity"
                  ToolTip.VerticalOffset="30"
                  Click="HelpClickHandler"
                  Classes="ButtonWithIcon">
            <Path HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Width="12"
                  Height="12"
                  Data="{DynamicResource Help}"
                  Fill="{DynamicResource LightDefaultOpacity20}"/>
          </Button>
        </StackPanel>

        <!-- swap currencies button -->
        <Button HorizontalAlignment="Right"
                HorizontalContentAlignment="Center"
                VerticalContentAlignment="Center"
                Padding="0"
                Width="40"
                Height="40"
                CornerRadius="20"
                Margin="0 -14 -45 -14"
                Classes="ButtonWithIcon">
            <Path Width="18"
                  Height="18"
                  Stretch="Fill"
                  Data="{DynamicResource SwapArrows}"
                  Fill="{DynamicResource LightDefaultOpacity50}">
              <Path.RenderTransform>
                <RotateTransform Angle="90"/>
              </Path.RenderTransform>
            </Path>
        </Button>
      </Grid>
          
      <!-- To currency view -->
      <views:ConversionCurrencyView Margin="0 0 0 0"
                                    Width="486"
                                    Height="102"
                                    DataContext="{Binding ToViewModel}"/>

      <!-- Change redeem adderss, price, available volume, fees and warning view -->
      <Grid Width="486"
            ColumnDefinitions="Auto,*"
            Margin="0 12 0 16">
        <Grid.IsVisible>
          <MultiBinding Converter="{x:Static BoolConverters.And}">
            <Binding Path="FromViewModel.Selected"/>
            <Binding Path="ToViewModel.Selected"/>
          </MultiBinding>
        </Grid.IsVisible>

        <StackPanel Orientation="Vertical"
                    Grid.Column="0">
          <StackPanel Orientation="Horizontal"
                      Margin="0 0 0 16">
            <Button Content="Change redeem address"
                    VerticalAlignment="Bottom"
                    Command="{Binding ChangeRedeemAddress}"
                    Classes="LinkButton Underlined"/>
            <Button Padding="3"
                    VerticalAlignment="Center"
                    VerticalContentAlignment="Center"
                    ToolTip.Placement="AnchorAndGravity"
                    ToolTip.Tip="By default wallet will send a redeem transaction from the address you use to receive funds. You can change the address to any other that has sufficient funds to send the redeem transaction"
                    ToolTip.VerticalOffset="50"
                    Click="HelpClickHandler"
                    Classes="ButtonWithIcon">
              <Path HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Width="12"
                    Height="12"
                    Data="{DynamicResource Help}"
                    Fill="{DynamicResource LightDefaultOpacity20}"/>
            </Button>
          </StackPanel>

          <!-- Estimated price -->
          <StackPanel Orientation="Horizontal">
            <TextBlock Text="Estimated Price 1"
                       Foreground="{DynamicResource SecondaryForegroundBrush}"
                       VerticalAlignment="Center"
                       FontSize="13"
                       FontFamily="{DynamicResource DefaultLightFontFamily}"/>
            <TextBlock Margin="4 0 0 0"
                       Text="{Binding BaseCurrencyCode}"
                       VerticalAlignment="Center"
                       Foreground="{DynamicResource SecondaryForegroundBrush}"
                       FontSize="13"
                       FontFamily="{DynamicResource DefaultLightFontFamily}"/>
            <TextBlock Margin="4 0 0 0"
                       Text="="
                       Foreground="{DynamicResource SecondaryForegroundBrush}"
                       VerticalAlignment="Center"
                       FontSize="13"
                       FontFamily="{DynamicResource DefaultLightFontFamily}"/>
            <TextBlock Margin="4 0 0 0"
                       Foreground="{DynamicResource SecondaryForegroundBrush}"
                       VerticalAlignment="Center"
                       FontSize="13"
                       FontFamily="{DynamicResource DefaultLightFontFamily}">
              <TextBlock.Text>
                <MultiBinding Converter="{StaticResource AmountToStringConverter}">
                  <Binding Path="EstimatedPrice"/>
                  <Binding Path="PriceFormat"/>
                </MultiBinding>
              </TextBlock.Text>
            </TextBlock>
            <TextBlock Margin="4 0 0 0"
                       Text="{Binding QuoteCurrencyCode}"
                       Foreground="{DynamicResource SecondaryForegroundBrush}"
                       VerticalAlignment="Center"
                       FontSize="13"
                       FontFamily="{DynamicResource DefaultLightFontFamily}"/>
            <Button Padding="3"
                    VerticalAlignment="Center"
                    VerticalContentAlignment="Center"
                    Click="HelpClickHandler"
                    Classes="ButtonWithIcon">
              <Path HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Width="12"
                    Height="12"
                    Data="{DynamicResource Help}"
                    Fill="{DynamicResource LightDefaultOpacity20}"/>
            </Button>
          </StackPanel>

          <!-- Estimated network fees -->
          <StackPanel Orientation="Horizontal">
            <TextBlock Text="Estimated network fees"
                       Foreground="{DynamicResource SecondaryForegroundBrush}"
                       VerticalAlignment="Center"
                       FontSize="13"
                       FontFamily="{DynamicResource DefaultLightFontFamily}"/>
            <TextBlock Margin="4 0 0 0"
                       Text="{Binding EstimatedTotalNetworkFeeInBase}"
                       Foreground="{DynamicResource SecondaryForegroundBrush}"
                       VerticalAlignment="Center"
                       FontSize="13"
                       FontFamily="{DynamicResource DefaultLightFontFamily}">
              <TextBlock.Text>
                <MultiBinding Converter="{StaticResource AmountToStringConverter}">
                  <Binding Path="EstimatedTotalNetworkFeeInBase"/>
                  <Binding Path="FromCurrencyViewModel.BaseCurrencyFormat"/>
                </MultiBinding>
              </TextBlock.Text>
            </TextBlock>
            <Button Padding="3"
                    VerticalAlignment="Center"
                    VerticalContentAlignment="Center"
                    Click="HelpClickHandler"
                    Classes="ButtonWithIcon">
              <Path HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Width="12"
                    Height="12"
                    Data="{DynamicResource Help}"
                    Fill="{DynamicResource LightDefaultOpacity20}"/>
              <ToolTip.Tip>
                <StackPanel Orientation="Vertical">
                  <TextBlock Foreground="{DynamicResource DefaultAmountInBaseForegroundBrush}"
                             Text="Network fees for atomic swap:"/>

                  <StackPanel Margin="0 7 0 0"
                              Orientation="Horizontal"
                              HorizontalAlignment="Left"
                              VerticalAlignment="Center">
                    <TextBlock Foreground="{DynamicResource DefaultAmountInBaseForegroundBrush}"
                               Text="Payment fee:"/>

                    <TextBlock Margin="5 0 0 0"
                               Foreground="{DynamicResource DefaultForegroundBrush}"
                               FontFamily="{DynamicResource DefaultFontFamily}">
                      <TextBlock.Text>
                        <MultiBinding Converter="{StaticResource AmountToStringConverter}">
                          <Binding Path="EstimatedPaymentFee"
                                   Mode="TwoWay"/>
                          <Binding Path="FromCurrencyViewModel.FeeCurrencyFormat"
                                   Mode="OneWay"/>
                        </MultiBinding>
                      </TextBlock.Text>
                    </TextBlock>

                    <TextBlock Text="{Binding FromCurrencyViewModel.FeeCurrencyCode}"
                               Margin="3 0 0 2"
                               FontSize="9"
                               VerticalAlignment="Bottom"
                               Foreground="{DynamicResource DefaultForegroundBrush}"
                               FontFamily="{DynamicResource DefaultFontFamily}"/>

                    <TextBlock Margin="5 0 0 0"
                               Foreground="{DynamicResource DefaultAmountInBaseForegroundBrush}"
                               Text="("/>

                    <TextBlock Foreground="{DynamicResource DefaultAmountInBaseForegroundBrush}"
                               FontFamily="{DynamicResource DefaultFontFamily}">
                      <TextBlock.Text>
                        <MultiBinding Converter="{StaticResource AmountToStringConverter}">
                          <Binding Path="EstimatedPaymentFeeInBase"
                                   Mode="TwoWay"/>
                          <Binding Path="FromCurrencyViewModel.BaseCurrencyFormat"
                                   Mode="OneWay"/>
                        </MultiBinding>
                      </TextBlock.Text>
                    </TextBlock>

                    <TextBlock Foreground="{DynamicResource DefaultAmountInBaseForegroundBrush}"
                               Text=")" />
                  </StackPanel>

                  <StackPanel Orientation="Horizontal"
                              HorizontalAlignment="Left"
                              VerticalAlignment="Center"
                              IsVisible="{Binding !HasRewardForRedeem}">
                    <TextBlock Foreground="{DynamicResource DefaultAmountInBaseForegroundBrush}"
                               Text="Redeem fee:"/>

                    <TextBlock Margin="5 0 0 0"
                               Foreground="{DynamicResource DefaultForegroundBrush}"
                               FontFamily="{DynamicResource DefaultFontFamily}">
                      <TextBlock.Text>
                        <MultiBinding Converter="{StaticResource AmountToStringConverter}">
                          <Binding Path="EstimatedRedeemFee"
                                   Mode="TwoWay"/>
                          <Binding Path="ToCurrencyViewModel.FeeCurrencyFormat"
                                   Mode="OneWay"/>
                        </MultiBinding>
                      </TextBlock.Text>
                    </TextBlock>

                    <TextBlock Text="{Binding ToCurrencyViewModel.FeeCurrencyCode}"
                               Margin="3 0 0 2"
                               FontSize="9"
                               VerticalAlignment="Bottom"
                               Foreground="{DynamicResource DefaultForegroundBrush}"
                               FontFamily="{DynamicResource DefaultFontFamily}"/>

                    <TextBlock Margin="5 0 0 0"
                               Foreground="{DynamicResource DefaultAmountInBaseForegroundBrush}"
                               Text="("/>

                    <TextBlock Foreground="{DynamicResource DefaultAmountInBaseForegroundBrush}"
                               FontFamily="{DynamicResource DefaultFontFamily}">
                      <TextBlock.Text>
                        <MultiBinding Converter="{StaticResource AmountToStringConverter}">
                          <Binding Path="EstimatedRedeemFeeInBase"
                                   Mode="TwoWay"/>
                          <Binding Path="FromCurrencyViewModel.BaseCurrencyFormat"
                                   Mode="OneWay"/>
                        </MultiBinding>
                      </TextBlock.Text>
                    </TextBlock>

                    <TextBlock Foreground="{DynamicResource DefaultAmountInBaseForegroundBrush}"
                               Text=")"/>
                  </StackPanel>

                  <StackPanel Orientation="Horizontal"
                              HorizontalAlignment="Left"
                              VerticalAlignment="Center">
                    <TextBlock Foreground="{DynamicResource DefaultAmountInBaseForegroundBrush}"
                               Text="Maker fee:"/>

                    <TextBlock Margin="5 0 0 0"
                               Foreground="{DynamicResource DefaultForegroundBrush}"
                               FontFamily="{DynamicResource DefaultFontFamily}">
                      <TextBlock.Text>
                        <MultiBinding Converter="{StaticResource AmountToStringConverter}">
                          <Binding Path="EstimatedMakerNetworkFee"
                                   Mode="TwoWay"/>
                          <Binding Path="FromCurrencyViewModel.CurrencyFormat"
                                   Mode="OneWay"/>
                        </MultiBinding>
                      </TextBlock.Text>
                    </TextBlock>

                    <TextBlock Text="{Binding FromCurrencyViewModel.CurrencyCode}"
                               Margin="3 0 0 2"
                               FontSize="9"
                               VerticalAlignment="Bottom"
                               Foreground="{DynamicResource DefaultForegroundBrush}"
                               FontFamily="{DynamicResource DefaultFontFamily}"/>

                    <TextBlock Margin="5 0 0 0"
                               Foreground="{DynamicResource DefaultAmountInBaseForegroundBrush}"
                               Text="("/>

                    <TextBlock Foreground="{DynamicResource DefaultAmountInBaseForegroundBrush}"
                               FontFamily="{DynamicResource DefaultFontFamily}">
                      <TextBlock.Text>
                        <MultiBinding Converter="{StaticResource AmountToStringConverter}">
                          <Binding Path="EstimatedMakerNetworkFeeInBase"
                                   Mode="TwoWay"/>
                          <Binding Path="FromCurrencyViewModel.BaseCurrencyFormat"
                                   Mode="OneWay"/>
                        </MultiBinding>
                      </TextBlock.Text>
                    </TextBlock>

                    <TextBlock Foreground="{DynamicResource DefaultAmountInBaseForegroundBrush}"
                               Text=")"/>
                  </StackPanel>

                  <StackPanel Orientation="Horizontal"
                              HorizontalAlignment="Left"
                              VerticalAlignment="Center"
                              IsVisible="{Binding HasRewardForRedeem}">
                    <TextBlock Foreground="{DynamicResource DefaultAmountInBaseForegroundBrush}"
                               Text="Reward for redeem:"/>

                    <TextBlock Margin="5 0 0 0"
                               Foreground="{DynamicResource DefaultForegroundBrush}"
                               FontFamily="{DynamicResource DefaultFontFamily}">
                      <TextBlock.Text>
                        <MultiBinding Converter="{StaticResource AmountToStringConverter}">
                          <Binding Path="RewardForRedeem"
                                   Mode="TwoWay"/>
                          <Binding Path="ToCurrencyViewModel.CurrencyFormat"
                                   Mode="OneWay"/>
                        </MultiBinding>
                      </TextBlock.Text>
                    </TextBlock>

                    <TextBlock Text="{Binding ToCurrencyViewModel.CurrencyCode}"
                               Margin="3 0 0 2"
                               FontSize="9"
                               VerticalAlignment="Bottom"
                               Foreground="{DynamicResource DefaultForegroundBrush}"
                               FontFamily="{DynamicResource DefaultFontFamily}"/>

                    <TextBlock Margin="5 0 0 0"
                               Foreground="{DynamicResource DefaultAmountInBaseForegroundBrush}"
                               Text="("/>

                    <TextBlock Foreground="{DynamicResource DefaultAmountInBaseForegroundBrush}"
                               FontFamily="{DynamicResource DefaultFontFamily}">
                      <TextBlock.Text>
                        <MultiBinding Converter="{StaticResource AmountToStringConverter}">
                          <Binding Path="RewardForRedeemInBase"
                                   Mode="TwoWay"/>
                          <Binding Path="FromCurrencyViewModel.BaseCurrencyFormat"
                                   Mode="OneWay"/>
                        </MultiBinding>
                      </TextBlock.Text>
                    </TextBlock>

                    <TextBlock Foreground="{DynamicResource DefaultAmountInBaseForegroundBrush}"
                               Text=")"/>
                  </StackPanel>

                  <StackPanel Margin="0 7 0 0"
                              Orientation="Horizontal"
                              HorizontalAlignment="Left"
                              VerticalAlignment="Center">
                    <TextBlock Foreground="{DynamicResource DefaultAmountInBaseForegroundBrush}"
                               Text="Total network fees:"/>

                    <TextBlock Margin="5 0 0 0"
                               Foreground="{DynamicResource DefaultAmountForegroundBrush}"
                               FontFamily="{DynamicResource DefaultFontFamily}">
                      <TextBlock.Text>
                        <MultiBinding Converter="{StaticResource AmountToStringConverter}">
                          <Binding Path="EstimatedTotalNetworkFeeInBase"
                                   Mode="TwoWay"/>
                          <Binding Path="FromCurrencyViewModel.BaseCurrencyFormat"
                                   Mode="OneWay"/>
                        </MultiBinding>
                      </TextBlock.Text>
                    </TextBlock>
                  </StackPanel>
                </StackPanel>                    
              </ToolTip.Tip>
            </Button>
          </StackPanel>
        </StackPanel>

        <!-- Available amount -->            
        <StackPanel Orientation="Horizontal"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Top"
                    Grid.Column="1">
          <TextBlock Text="Available"
                     Foreground="{DynamicResource SecondaryForegroundBrush}"
                     VerticalAlignment="Center"
                     FontSize="13"
                     FontFamily="{DynamicResource DefaultLightFontFamily}"/>
          <TextBlock Margin="4 0 0 0"
                     Foreground="{DynamicResource SecondaryForegroundBrush}"
                     VerticalAlignment="Center"
                     FontSize="13"
                     FontFamily="{DynamicResource DefaultLightFontFamily}">
            <TextBlock.Text>
              <MultiBinding Converter="{StaticResource AmountToStringConverter}">
                <Binding Path="EstimatedMaxAmount"/>
                <Binding Path="FromCurrencyViewModel.CurrencyFormat"/>
              </MultiBinding>
            </TextBlock.Text>
          </TextBlock>
          <TextBlock Margin="4 0 0 0"
                     Text="{Binding FromCurrencyViewModel.CurrencyCode}"
                     VerticalAlignment="Center"
                     Foreground="{DynamicResource SecondaryForegroundBrush}"
                     FontSize="13"
                     FontFamily="{DynamicResource DefaultLightFontFamily}"/>
          <Button Padding="3"
                  VerticalAlignment="Center"
                  VerticalContentAlignment="Center"
                  ToolTip.Placement="AnchorAndGravity"
                  ToolTip.Tip="The limit applies to a single trade. In case you require more liquidity make multiple trades"
                  ToolTip.VerticalOffset="40"
                  Click="HelpClickHandler"
                  Classes="ButtonWithIcon">
            <Path HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Width="12"
                  Height="12"
                  Data="{DynamicResource Help}"
                  Fill="{DynamicResource LightDefaultOpacity20}"/>
          </Button>
        </StackPanel>
      </Grid>

      <!-- Warning -->
      <StackPanel Orientation="Horizontal"
                  Width="486"
                  Margin="0 0 0 16"
                  IsVisible="{Binding ValidationMessage, Converter={x:Static StringConverters.IsNotNullOrEmpty}}">
        <TextBlock Text="{Binding ValidationMessage}"
                   MaxWidth="471"
                   TextWrapping="Wrap"
                   Foreground="{DynamicResource LightDefaultOpacity50}"
                   FontSize="13"
                   FontFamily="{DynamicResource DefaultLightFontFamily}">
          <i:Interaction.Behaviors>
            <ia:DataTriggerBehavior Binding="{Binding ValidationMessageType}"
                                    ComparisonCondition="Equal"
                                    Value="Warning">
              <ia:ChangePropertyAction TargetObject="{Binding self}"
                                       PropertyName="Foreground"
                                       Value="{DynamicResource Orange}"/>
            </ia:DataTriggerBehavior>
            <ia:DataTriggerBehavior Binding="{Binding ValidationMessageType}"
                                    ComparisonCondition="Equal"
                                    Value="Error">
              <ia:ChangePropertyAction TargetObject="{Binding self}"
                                       PropertyName="Foreground"
                                       Value="{DynamicResource DarkRed}"/>
            </ia:DataTriggerBehavior>
          </i:Interaction.Behaviors>
        </TextBlock>
        <Button Padding="3"
                VerticalAlignment="Center"
                VerticalContentAlignment="Center"
                ToolTip.Tip="{Binding ValidationMessageToolTip}"
                ToolTip.Placement="AnchorAndGravity"
                ToolTip.VerticalOffset="30"
                Click="HelpClickHandler"
                Classes="ButtonWithIcon">
          <Path HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Width="12"
                Height="12"
                Data="{DynamicResource Help}"
                Fill="{DynamicResource LightDefaultOpacity20}"/>
        </Button>
      </StackPanel>

      <!-- exchange button -->
      <controls:RoundedButton Width="486"
                              Height="52"
                              CornerRadius="6"
                              Content="Exchange"
                              FontSize="18"
                              FontFamily="{DynamicResource DefaultFontFamily}"
                              FontWeight="Normal"
                              Command="{Binding ConvertCommand}"
                              IsEnabled="{Binding CanConvert}">
        <controls:RoundedButton.IsVisible>
          <MultiBinding Converter="{x:Static BoolConverters.And}">
            <Binding Path="FromViewModel.Selected"/>
            <Binding Path="ToViewModel.Selected"/>
          </MultiBinding>
        </controls:RoundedButton.IsVisible>
      </controls:RoundedButton>
    </StackPanel>

    <TextBlock Margin="48 64 48 0"
               Text="Swap History"    
               Foreground="{DynamicResource DefaultForegroundBrush}"
               FontSize="22"
               FontFamily="{DynamicResource DefaultLightFontFamily}"
               Grid.Column="0"
               Grid.Row="1"/>

    <!-- swaps -->
    <DataGrid x:Name="DgConversions"
              Margin="48 16 48 7"
              Background="Transparent"
              AutoGenerateColumns="False"
              IsReadOnly="True"
              Cursor="Hand"
              RowDetailsVisibilityMode="VisibleWhenSelected"
              SelectionMode="Single"
              Items="{Binding Swaps}"
              Grid.Column="0"
              Grid.ColumnSpan="{Binding ColumnSpan}"
              Grid.Row="2"
              Classes="RedesignGrid">
      <DataGrid.Columns>
        <DataGridTemplateColumn Header="From - To"
                                CanUserSort="False"
                                Width="*">
          <DataGridTemplateColumn.CellTemplate>
            <DataTemplate DataType="{x:Type vm:SwapViewModel}">
              <StackPanel Orientation="Horizontal"
                          Margin="10 0 10 0">
                <!-- from -->
                <Image Width="24"
                       Height="24"
                       Source="{Binding FromCurrencyViewModel.LargeIconPath}"
                       UseLayoutRounding="True"/>

                <StackPanel Orientation="Horizontal"
                            Margin="9 0 0 0"
                            MinWidth="150">
                  <TextBlock Margin="0 12 0 12"
                             FontFamily="{DynamicResource DefaultLightFontFamily}"
                             FontSize="16"
                             Foreground="{DynamicResource DefaultForegroundBrush}"
                             VerticalAlignment="Center">
                    <TextBlock.Text>
                      <MultiBinding Converter="{StaticResource AmountToStringConverter}">
                        <Binding Path="FromAmount" Mode="OneWay"/>
                        <Binding Path="FromAmountFormat" Mode="OneWay"/>
                      </MultiBinding>
                    </TextBlock.Text>
                  </TextBlock>
                  <TextBlock Margin="6 0 0 0"
                             Text="{Binding FromCurrencyCode}"
                             FontFamily="{DynamicResource DefaultLightFontFamily}"
                             FontSize="16"
                             Foreground="{DynamicResource DefaultForegroundBrush}"
                             VerticalAlignment="Center"/>
                </StackPanel>

                <!-- arrows -->
                <Path Margin="30 0 30 0"
                      Width="12"
                      Height="12"
                      Stretch="Fill"
                      Data="{DynamicResource SwapArrows}"
                      Fill="{DynamicResource LightDefaultOpacity50}"/>
                
                <!-- to -->
                <Image Width="24"
                       Height="24"
                       Source="{Binding ToCurrencyViewModel.LargeIconPath}"
                       UseLayoutRounding="True"/>

                <TextBlock Margin="9 0 0 0"
                           FontFamily="{DynamicResource DefaultLightFontFamily}"
                           FontSize="16"
                           Foreground="{DynamicResource DefaultForegroundBrush}"
                           VerticalAlignment="Center">
                  <TextBlock.Text>
                    <MultiBinding Converter="{StaticResource AmountToStringConverter}">
                      <Binding Path="ToAmount" Mode="OneWay"/>
                      <Binding Path="ToAmountFormat" Mode="OneWay"/>
                    </MultiBinding>
                  </TextBlock.Text>
                </TextBlock>
                <TextBlock Margin="6 0 0 0"
                           Text="{Binding ToCurrencyCode}"
                           FontFamily="{DynamicResource DefaultLightFontFamily}"
                           FontSize="16"
                           Foreground="{DynamicResource DefaultForegroundBrush}"
                           VerticalAlignment="Center"/>
              </StackPanel>
            </DataTemplate>
          </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>
        <DataGridTemplateColumn Header="Status"
                                MinWidth="82">
          <DataGridTemplateColumn.CellTemplate>
            <DataTemplate>
              <styles:TypeTest>
                <styles:TypeTest.DataTemplate>
                  <controls:SwapStateDataTemplateSelector />
                </styles:TypeTest.DataTemplate>
              </styles:TypeTest>
            </DataTemplate>
          </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>
        <DataGridTextColumn Header="Time"
                            MinWidth="158"
                            Binding="{Binding LocalTime, Converter={StaticResource DateTimeToTxTimeConverter}}" />
      </DataGrid.Columns>
    </DataGrid>

    <!-- swap detalization -->
    <views:SwapDetailsView
      Grid.Row="0"
      Grid.Column="1"
      Grid.RowSpan="3"
      IsVisible="{Binding $parent.DataContext.DetailsVisible}"
      DataContext="{Binding SwapDetailsViewModel}"/>
  </Grid>
</UserControl>