<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             mc:Ignorable="d" d:DesignWidth="1200" d:DesignHeight="1000"
             x:Class="Atomex.Client.Desktop.Views.ConversionView"
             xmlns:vm="clr-namespace:Atomex.Client.Desktop.ViewModels"
             xmlns:views="clr-namespace:Atomex.Client.Desktop.Views"
             xmlns:controls="clr-namespace:Atomex.Client.Desktop.Controls"
             xmlns:converters="clr-namespace:Atomex.Client.Desktop.Converters"
             xmlns:styles="clr-namespace:Atomex.Client.Desktop.Styles"
             xmlns:svg="clr-namespace:Avalonia.Svg.Skia;assembly=Avalonia.Svg.Skia"
             xmlns:abstract="clr-namespace:Atomex.Client.Desktop.ViewModels.Abstract"
             xmlns:common="clr-namespace:Atomex.Common;assembly=Atomex.Common">

  <Design.DataContext>
    <vm:ConversionViewModel/>
  </Design.DataContext>

  <UserControl.Styles>
    <Style Selector="TextBlock.HeaderFieldTextBlockStyle">
      <Setter Property="Margin" Value="0 0 10 0"/>
      <Setter Property="Foreground" Value="{DynamicResource DefaultForegroundBrush}"/>
      <Setter Property="FontFamily" Value="{DynamicResource DefaultMediumFontFamily}"/>
      <Setter Property="FontSize" Value="15" />
      <Setter Property="VerticalAlignment" Value="Center"/>
      <Setter Property="HorizontalAlignment" Value="Right"/>
    </Style>
    <Style Selector="TextBlock.Message">
      <Setter Property="Foreground" Value="{DynamicResource LightDefaultOpacity50}"/>
    </Style>
    <Style Selector="TextBlock.Warning">
      <Setter Property="Foreground" Value="{DynamicResource Orange}"/>
    </Style>
    <Style Selector="TextBlock.Error">
      <Setter Property="Foreground" Value="{DynamicResource DarkRed}"/>
    </Style>
  </UserControl.Styles>

  <UserControl.Resources>
    <converters:AmountToStringConverter x:Key="AmountToStringConverter"/>
    <converters:DateTimeToTxTimeConverter x:Key="DateTimeToTxTimeConverter"/>
    <converters:CompactStateToBoolConverter x:Key="CompactStateToBoolConverter"/>
  </UserControl.Resources>

  <Grid Name="DesignGrid"
        RowDefinitions="Auto,Auto,Auto,*" ColumnDefinitions="*">
    <StackPanel Orientation="Vertical"
                Grid.Column="0"
                Grid.Row="0">

      <!-- <TextBlock Margin="0 40 0 32" -->
      <!--            Text="Exchange" -->
      <!--            FontSize="32" -->
      <!--            FontFamily="{DynamicResource DefaultLightFontFamily}" -->
      <!--            HorizontalAlignment="Center" -->
      <!--            Foreground="{DynamicResource DefaultForegroundBrush}"/> -->

      <!-- from currency view -->
      <views:ConversionCurrencyView Width="486"
                                    Height="102"
                                    Margin="0 40 0 0"
                                    DataContext="{Binding FromViewModel}"/>

      <Grid ColumnDefinitions="486,1"
            RowDefinitions="12"
            Width="486">
          <!-- swap currencies button -->
        <Panel Grid.Column="1"
                Margin="30 0 0 0">
          <controls:IconButton Classes="Swap"
                                Command="{Binding SwapCurrenciesCommand}"/>
        </Panel>
      </Grid>

      <!-- to currency view -->
      <views:ConversionCurrencyView Width="486"
                                    Height="102"
                                    DataContext="{Binding ToViewModel}"/>

      <!-- change redeem adderss, price, available volume, fees and warning view -->
      <Grid Width="486"
            ColumnDefinitions="Auto,*"
            Margin="0 12 0 16">
        <Grid.IsVisible>
          <MultiBinding Converter="{x:Static BoolConverters.And}">
            <Binding Path="FromViewModel.Selected"/>
            <Binding Path="ToViewModel.Selected"/>
          </MultiBinding>
        </Grid.IsVisible>

        <StackPanel Orientation="Vertical"
                    Grid.Column="0">
          <!-- change redeem address -->
          <StackPanel Orientation="Horizontal"
                      Margin="0 0 0 16"
                      IsVisible="{Binding UseRedeemAddress}">
            <controls:LinkButton Underlined="True"
                                 Classes="Dashed"
                                 VerticalAlignment="Bottom"
                                 Content="Change redeem address"
                                 Command="{Binding ChangeRedeemAddress}"/>

            <controls:IconButton Classes="Question"
                                 VerticalAlignment="Center"
                                 Margin="4 0 0 0"
                                 ToolText="By default wallet will send a redeem transaction from the address you use to receive funds. You can change the address to any other that has sufficient funds to send the redeem transaction"/>
          </StackPanel>

          <!-- estimated price -->
          <StackPanel Orientation="Horizontal">
            <TextBlock Text="Estimated Price 1"
                       Foreground="{DynamicResource SecondaryForegroundBrush}"
                       VerticalAlignment="Center"
                       FontSize="13"
                       FontFamily="{DynamicResource DefaultLightFontFamily}"/>
            <TextBlock Margin="4 0 0 0"
                       Text="{Binding BaseCurrencyCode}"
                       VerticalAlignment="Center"
                       Foreground="{DynamicResource SecondaryForegroundBrush}"
                       FontSize="13"
                       FontFamily="{DynamicResource DefaultLightFontFamily}"/>
            <TextBlock Margin="4 0 0 0"
                       Text="="
                       Foreground="{DynamicResource SecondaryForegroundBrush}"
                       VerticalAlignment="Center"
                       FontSize="13"
                       FontFamily="{DynamicResource DefaultLightFontFamily}"/>
            <TextBlock Margin="4 0 0 0"
                       Foreground="{DynamicResource SecondaryForegroundBrush}"
                       VerticalAlignment="Center"
                       FontSize="13"
                       FontFamily="{DynamicResource DefaultLightFontFamily}">
                <TextBlock.Text>
                    <MultiBinding Converter="{StaticResource AmountToStringConverter}">
                        <Binding Path="EstimatedPrice"/>
                        <Binding Path="PriceFormat"/>
                    </MultiBinding>
                </TextBlock.Text>
            </TextBlock>
            <TextBlock Margin="4 0 0 0"
                       Text="{Binding QuoteCurrencyCode}"
                       Foreground="{DynamicResource SecondaryForegroundBrush}"
                       VerticalAlignment="Center"
                       FontSize="13"
                       FontFamily="{DynamicResource DefaultLightFontFamily}"/>
            <controls:IconButton Classes="Question"
                                 VerticalAlignment="Center"
                                 ToolText="Estimated price depends on the conversion amount and may change. A trading order is always sent with a price no worse than agreed by the user. If during the time of sending the order the price has changed for the worse, the trading order is canceled"
                                 Margin="4 0 0 0"/>
          </StackPanel>

          <!-- estimated network fees -->
          <StackPanel Orientation="Horizontal">
            <TextBlock Text="Estimated network fees"
                       Foreground="{DynamicResource SecondaryForegroundBrush}"
                       VerticalAlignment="Center"
                       FontSize="13"
                       FontFamily="{DynamicResource DefaultLightFontFamily}"/>
            <TextBlock Margin="4 0 0 0"
                       Foreground="{DynamicResource SecondaryForegroundBrush}"
                       VerticalAlignment="Center"
                       FontSize="13"
                       FontFamily="{DynamicResource DefaultLightFontFamily}">
                <TextBlock.Text>
                    <MultiBinding Converter="{StaticResource AmountToStringConverter}">
                        <Binding Path="EstimatedTotalNetworkFeeInBase"/>
                        <Binding Path="FromViewModel.CurrencyViewModel.BaseCurrencyFormat"/>
                    </MultiBinding>
                </TextBlock.Text>
            </TextBlock>

            <controls:IconButton Classes="Question WithToolTipContent"
                                 VerticalAlignment="Center"
                                 Margin="4 0 0 0">
              <StackPanel Orientation="Vertical">
                <TextBlock Foreground="{DynamicResource DefaultForegroundBrush}"
                           Text="Network fees for atomic swap:"/>
                <Grid Margin="0 7 0 0"
                      ColumnDefinitions="Auto,15,Auto,5,Auto"
                      RowDefinitions="Auto,Auto,Auto,Auto">

                  <!-- payment fee -->
                  <TextBlock Foreground="{DynamicResource DefaultForegroundBrush}"
                             Text="Payment fee:"
                             Grid.Row="0"
                             Grid.Column="0"/>

                  <StackPanel Orientation="Horizontal"
                              HorizontalAlignment="Right"
                              VerticalAlignment="Center"
                              Grid.Row="0"
                              Grid.Column="2">

                    <TextBlock Foreground="{DynamicResource DefaultForegroundBrush}">
                        <TextBlock.Text>
                            <MultiBinding Converter="{StaticResource AmountToStringConverter}">
                                <Binding Path="EstimatedPaymentFee"
                                         Mode="TwoWay"/>
                                <Binding Path="FromViewModel.CurrencyViewModel.FeeCurrencyFormat"
                                         Mode="OneWay"/>
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>

                    <TextBlock Text="{Binding FromViewModel.CurrencyViewModel.FeeCurrencyCode}"
                               Margin="3 0 0 1"
                               FontSize="9"
                               VerticalAlignment="Bottom"
                               Foreground="{DynamicResource DefaultForegroundBrush}"/>
                  </StackPanel>

                  <!-- payment fee in base -->
                  <StackPanel Orientation="Horizontal"
                              HorizontalAlignment="Left"
                              VerticalAlignment="Center"
                              Grid.Row="0"
                              Grid.Column="4">

                    <TextBlock Foreground="{DynamicResource DefaultAmountInBaseForegroundBrush}"
                               Text="("/>

                    <TextBlock Foreground="{DynamicResource DefaultAmountInBaseForegroundBrush}">
                      <TextBlock.Text>
                        <MultiBinding Converter="{StaticResource AmountToStringConverter}">
                          <Binding Path="EstimatedPaymentFeeInBase"
                                   Mode="TwoWay"/>
                          <Binding Path="FromViewModel.CurrencyViewModel.BaseCurrencyFormat"
                                   Mode="OneWay"/>
                        </MultiBinding>
                      </TextBlock.Text>
                    </TextBlock>

                    <TextBlock Foreground="{DynamicResource DefaultAmountInBaseForegroundBrush}"
                               Text=")"/>
                  </StackPanel>

                  <!-- redeem fee -->
                  <TextBlock Foreground="{DynamicResource DefaultForegroundBrush}"
                             Text="Redeem fee:"
                             Grid.Row="1"
                             Grid.Column="0"
                             IsVisible="{Binding !HasRewardForRedeem}"/>

                  <StackPanel Orientation="Horizontal"
                              HorizontalAlignment="Right"
                              VerticalAlignment="Center"
                              Grid.Row="1"
                              Grid.Column="2"
                              IsVisible="{Binding !HasRewardForRedeem}">

                    <TextBlock Foreground="{DynamicResource DefaultForegroundBrush}">
                      <TextBlock.Text>
                        <MultiBinding Converter="{StaticResource AmountToStringConverter}">
                          <Binding Path="EstimatedRedeemFee"
                                   Mode="TwoWay"/>
                          <Binding Path="ToViewModel.CurrencyViewModel.FeeCurrencyFormat"
                                   Mode="OneWay"/>
                        </MultiBinding>
                      </TextBlock.Text>
                    </TextBlock>

                    <TextBlock Text="{Binding ToViewModel.CurrencyViewModel.FeeCurrencyCode}"
                               Margin="3 0 0 1"
                               FontSize="9"
                               VerticalAlignment="Bottom"
                               Foreground="{DynamicResource DefaultForegroundBrush}"/>
                  </StackPanel>

                  <!-- redeem fee in base -->
                  <StackPanel Orientation="Horizontal"
                              HorizontalAlignment="Left"
                              VerticalAlignment="Center"
                              Grid.Row="1"
                              Grid.Column="4"
                              IsVisible="{Binding !HasRewardForRedeem}">

                    <TextBlock Foreground="{DynamicResource DefaultAmountInBaseForegroundBrush}"
                               Text="("/>

                    <TextBlock Foreground="{DynamicResource DefaultAmountInBaseForegroundBrush}">
                      <TextBlock.Text>
                        <MultiBinding Converter="{StaticResource AmountToStringConverter}">
                          <Binding Path="EstimatedRedeemFeeInBase"
                                   Mode="TwoWay"/>
                          <Binding Path="FromViewModel.CurrencyViewModel.BaseCurrencyFormat"
                                   Mode="OneWay"/>
                        </MultiBinding>
                      </TextBlock.Text>
                    </TextBlock>

                    <TextBlock Foreground="{DynamicResource DefaultAmountInBaseForegroundBrush}"
                               Text=")"/>
                  </StackPanel>

                  <!-- maker fee -->
                  <TextBlock Foreground="{DynamicResource DefaultForegroundBrush}"
                             Text="Maker fee:"
                             Grid.Row="2"
                             Grid.Column="0"/>

                  <StackPanel Orientation="Horizontal"
                              HorizontalAlignment="Right"
                              VerticalAlignment="Center"
                              Grid.Row="2"
                              Grid.Column="2">

                    <TextBlock Foreground="{DynamicResource DefaultForegroundBrush}">
                      <TextBlock.Text>
                        <MultiBinding Converter="{StaticResource AmountToStringConverter}">
                          <Binding Path="EstimatedMakerNetworkFee"
                                   Mode="TwoWay"/>
                          <Binding Path="FromViewModel.CurrencyViewModel.CurrencyFormat"
                                   Mode="OneWay"/>
                        </MultiBinding>
                      </TextBlock.Text>
                    </TextBlock>

                    <TextBlock Text="{Binding FromViewModel.CurrencyViewModel.CurrencyName}"
                               Margin="3 0 0 1"
                               FontSize="9"
                               VerticalAlignment="Bottom"
                               Foreground="{DynamicResource DefaultForegroundBrush}"/>
                  </StackPanel>

                  <!-- maker fee in base -->
                  <StackPanel Orientation="Horizontal"
                              HorizontalAlignment="Left"
                              VerticalAlignment="Center"
                              Grid.Row="2"
                              Grid.Column="4">

                    <TextBlock Foreground="{DynamicResource DefaultAmountInBaseForegroundBrush}"
                               Text="("/>

                    <TextBlock Foreground="{DynamicResource DefaultAmountInBaseForegroundBrush}">
                      <TextBlock.Text>
                        <MultiBinding Converter="{StaticResource AmountToStringConverter}">
                          <Binding Path="EstimatedMakerNetworkFeeInBase"
                                   Mode="TwoWay"/>
                          <Binding Path="FromViewModel.CurrencyViewModel.BaseCurrencyFormat"
                                   Mode="OneWay"/>
                        </MultiBinding>
                      </TextBlock.Text>
                    </TextBlock>

                    <TextBlock Foreground="{DynamicResource DefaultAmountInBaseForegroundBrush}"
                               Text=")"/>
                  </StackPanel>

                  <!-- reward for redeem -->
                  <TextBlock Foreground="{DynamicResource DefaultForegroundBrush}"
                             Text="Reward for redeem:"
                             Grid.Row="3"
                             Grid.Column="0"
                             IsVisible="{Binding HasRewardForRedeem}"/>

                  <StackPanel Orientation="Horizontal"
                              HorizontalAlignment="Right"
                              VerticalAlignment="Center"
                              Grid.Row="3"
                              Grid.Column="2"
                              IsVisible="{Binding HasRewardForRedeem}">

                    <TextBlock Foreground="{DynamicResource DefaultForegroundBrush}">
                      <TextBlock.Text>
                        <MultiBinding Converter="{StaticResource AmountToStringConverter}">
                          <Binding Path="RewardForRedeem"
                                   Mode="TwoWay"/>
                          <Binding Path="ToViewModel.CurrencyViewModel.CurrencyFormat"
                                   Mode="OneWay"/>
                        </MultiBinding>
                      </TextBlock.Text>
                    </TextBlock>

                    <TextBlock Text="{Binding ToViewModel.CurrencyViewModel.CurrencyName}"
                               Margin="3 0 0 1"
                               FontSize="9"
                               VerticalAlignment="Bottom"
                               Foreground="{DynamicResource DefaultForegroundBrush}"/>
                  </StackPanel>

                  <!-- reward for redeem in base -->
                  <StackPanel Orientation="Horizontal"
                              HorizontalAlignment="Left"
                              VerticalAlignment="Center"
                              Grid.Row="3"
                              Grid.Column="4"
                              IsVisible="{Binding HasRewardForRedeem}">

                    <TextBlock Foreground="{DynamicResource DefaultAmountInBaseForegroundBrush}"
                                Text="("/>

                    <TextBlock Foreground="{DynamicResource DefaultAmountInBaseForegroundBrush}">
                      <TextBlock.Text>
                        <MultiBinding Converter="{StaticResource AmountToStringConverter}">
                          <Binding Path="RewardForRedeemInBase"
                                   Mode="TwoWay"/>
                          <Binding Path="FromViewModel.CurrencyViewModel.BaseCurrencyFormat"
                                   Mode="OneWay"/>
                        </MultiBinding>
                      </TextBlock.Text>
                    </TextBlock>

                    <TextBlock Foreground="{DynamicResource DefaultAmountInBaseForegroundBrush}"
                               Text=")"/>
                  </StackPanel>
                </Grid>

                <!-- total network fees -->
                <StackPanel Margin="0 7 0 0"
                            Orientation="Horizontal"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center">
                  <TextBlock Foreground="{DynamicResource DefaultForegroundBrush}"
                             Text="Total network fees:"/>

                  <TextBlock Margin="5 0 0 0"
                             Foreground="{DynamicResource DefaultAmountForegroundBrush}">
                    <TextBlock.Text>
                      <MultiBinding Converter="{StaticResource AmountToStringConverter}">
                        <Binding Path="EstimatedTotalNetworkFeeInBase"
                                 Mode="TwoWay"/>
                        <Binding Path="FromViewModel.CurrencyViewModel.BaseCurrencyFormat"
                                 Mode="OneWay"/>
                      </MultiBinding>
                    </TextBlock.Text>
                  </TextBlock>
                </StackPanel>
              </StackPanel>
            </controls:IconButton>
          </StackPanel>
        </StackPanel>

        <!-- available amount -->
        <StackPanel Orientation="Horizontal"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Top"
                    Grid.Column="1">
          <TextBlock Text="Available"
                     Foreground="{DynamicResource SecondaryForegroundBrush}"
                     VerticalAlignment="Center"
                     FontSize="13"
                     FontFamily="{DynamicResource DefaultLightFontFamily}"/>
          <TextBlock Margin="4 0 0 0"
                     Foreground="{DynamicResource SecondaryForegroundBrush}"
                     VerticalAlignment="Center"
                     FontSize="13"
                     FontFamily="{DynamicResource DefaultLightFontFamily}">
            <TextBlock.Text>
              <MultiBinding Converter="{StaticResource AmountToStringConverter}">
                <Binding Path="EstimatedMaxFromAmount"/>
                <Binding Path="FromViewModel.CurrencyViewModel.CurrencyFormat"/>
              </MultiBinding>
            </TextBlock.Text>
          </TextBlock>
          <TextBlock Margin="4 0 0 0"
                     Text="{Binding FromViewModel.CurrencyViewModel.CurrencyName}"
                     VerticalAlignment="Center"
                     Foreground="{DynamicResource SecondaryForegroundBrush}"
                     FontSize="13"
                     FontFamily="{DynamicResource DefaultLightFontFamily}"/>

          <controls:IconButton Classes="Question"
                               VerticalAlignment="Center"
                               ToolText="The limit applies to a single trade. In case you require more liquidity make multiple trades"
                               Margin="4 0 0 0"/>
        </StackPanel>
      </Grid>

      <StackPanel Orientation="Vertical"
                  Width="486"
                  Margin="0 0 0 16">
        <StackPanel.IsVisible>
          <MultiBinding Converter="{x:Static BoolConverters.Or}">
            <Binding Path="AmountValidationMessage"
                     Converter="{x:Static StringConverters.IsNotNullOrEmpty}"/>
            <Binding Path="IsNoLiquidity"/>
            <Binding Path="Message"
                     Converter="{x:Static StringConverters.IsNotNullOrEmpty}"/>
            <Binding Path="IsToAddressExtrenal"/>
            <Binding Path="IsRedeemFromAddressWithMaxBalance"/>
          </MultiBinding>
        </StackPanel.IsVisible>

        <!-- amount validation message -->
        <StackPanel Orientation="Horizontal"
                    IsVisible="{Binding AmountValidationMessage, Converter={x:Static StringConverters.IsNotNullOrEmpty}}">
          <TextBlock Text="{Binding AmountValidationMessage}"
                     MaxWidth="471"
                     Padding="0 2 0 2"
                     TextWrapping="Wrap"
                     VerticalAlignment="Center"
                     FontSize="13"
                     FontFamily="{DynamicResource DefaultLightFontFamily}"
                     Classes="Message"
                     Classes.Warning="{Binding IsAmountValidationWarning}"
                     Classes.Error="{Binding IsAmountValidationError}"/>

          <controls:IconButton Classes="Question"
                               VerticalAlignment="Center"
                               IsVisible="{Binding AmountValidationMessageToolTip, Converter={x:Static StringConverters.IsNotNullOrEmpty}}"
                               ToolText="{Binding AmountValidationMessageToolTip}"
                               Margin="4 0 0 0"/>
        </StackPanel>

        <!-- not enough liquidity message -->
        <StackPanel Orientation="Horizontal"
                    IsVisible="{Binding IsNoLiquidity}">
          <TextBlock Text="Not enough liquidity"
                     Padding="0 2 0 2"
                     MaxWidth="471"
                     TextWrapping="Wrap"
                     VerticalAlignment="Center"
                     FontSize="13"
                     FontFamily="{DynamicResource DefaultLightFontFamily}"
                     Classes="Error"/>

          <controls:IconButton Classes="Question"
                               VerticalAlignment="Center"
                               IsVisible="{Binding AmountValidationMessageToolTip, Converter={x:Static StringConverters.IsNotNullOrEmpty}}"
                               ToolText="The amount you entered is greater than the available liquidity. Please use 'max' button to accurately determine the maximum amount that can be exchanged"
                               Margin="4 0 0 0"/>
        </StackPanel>

        <!-- warning -->
        <StackPanel Orientation="Horizontal"
                    IsVisible="{Binding Message, Converter={x:Static StringConverters.IsNotNullOrEmpty}}">
          <TextBlock Text="{Binding Message}"
                     Padding="0 2 0 2"
                     MaxWidth="471"
                     TextWrapping="Wrap"
                     VerticalAlignment="Center"
                     FontSize="13"
                     FontFamily="{DynamicResource DefaultLightFontFamily}"
                     Classes="Message"
                     Classes.Warning="{Binding IsWarning}"
                     Classes.Error="{Binding IsError}"/>

          <controls:IconButton Classes="Question"
                               VerticalAlignment="Center"
                               ToolText="{Binding MessageToolTip}"
                               Margin="4 0 0 0"/>
        </StackPanel>
      </StackPanel>
      <!-- exchange button -->
      <controls:RoundedButton Width="486"
                              Content="Exchange"
                              Command="{Binding ConvertCommand}"
                              IsEnabled="{Binding CanExchange}">
        <controls:RoundedButton.IsVisible>
          <MultiBinding Converter="{x:Static BoolConverters.And}">
            <Binding Path="FromViewModel.Selected"/>
            <Binding Path="ToViewModel.Selected"/>
          </MultiBinding>
        </controls:RoundedButton.IsVisible>
      </controls:RoundedButton>
    </StackPanel>

    <TextBlock Margin="48 64 48 0"
               Text="Exchange History"
               Foreground="{DynamicResource DefaultForegroundBrush}"
               FontSize="22"
               FontFamily="{DynamicResource DefaultLightFontFamily}"
               Grid.Column="0"
               Grid.Row="1"/>

    <Grid Grid.Row="2"
          Margin="48 16 48 0"
          ColumnDefinitions="*,150,200"
          RowDefinitions="1,30,1">
      <Rectangle Grid.Column="0"
                 Grid.ColumnSpan="3"
                 Grid.Row="0"
                 VerticalAlignment="Top"
                 Height="1"
                 Fill="{DynamicResource DefaultForegroundBrush}"/>
      <TextBlock Grid.Column="0"
                 Grid.Row="1"
                 Margin="10 0 0 0"
                 FontSize="13"
                 Foreground="{DynamicResource SecondaryForegroundBrush}"
                 Text="From - To"
                 VerticalAlignment="Center"/>
      <TextBlock Grid.Column="1"
                 Grid.Row="1"
                 Margin="10 0 0 0"
                 FontSize="13"
                 Foreground="{DynamicResource SecondaryForegroundBrush}"
                 Text="Status"
                 VerticalAlignment="Center"/>
      <controls:SortButton Grid.Column="2"
                           Grid.Row="1"
                           Title="Time"
                           Command="{Binding SortByTimeCommand}">
        <controls:SortButton.SortIsAsc>
          <Binding Path="CurrentSortDirection"
                   Converter="{x:Static converters:EnumToStringEqualConverter.Instance}"
                   ConverterParameter="{x:Static common:SortDirection.Asc}"/>
        </controls:SortButton.SortIsAsc>
        <controls:SortButton.SortIsDesc>
          <Binding Path="CurrentSortDirection"
                   Converter="{x:Static converters:EnumToStringEqualConverter.Instance}"
                   ConverterParameter="{x:Static common:SortDirection.Desc}"/>
        </controls:SortButton.SortIsDesc>
      </controls:SortButton>
      <Rectangle Grid.Column="0"
                 Grid.ColumnSpan="3"
                 Grid.Row="2"
                 VerticalAlignment="Bottom"
                 Height="1"
                 Fill="{DynamicResource LightDefaultOpacity20}"/>
    </Grid>
      
    <ListBox x:Name="ListBoxSwaps"
             Grid.Column="0"
             Grid.Row="3"
             Margin="48 0 48 7"
             Background="Transparent"
             Items="{Binding Swaps}"
             SelectionMode="Single"
             SelectedIndex="{Binding SelectedSwapIndex}">
      <ListBox.Styles>
        <Style Selector="ListBoxItem">
          <Setter Property="Padding" Value="0"/>
          <Setter Property="Cursor" Value="Hand"/>
        </Style>
        <Style Selector="ListBoxItem:pointerover /template/ ContentPresenter">
          <Setter Property="Background" Value="{DynamicResource LightDefaultOpacity10}"/>
          <Setter Property="CornerRadius" Value="8"/>
        </Style>
        <Style Selector="ListBoxItem:selected /template/ ContentPresenter">
          <Setter Property="Background" Value="{DynamicResource LightDefaultOpacity6}"/>
          <Setter Property="CornerRadius" Value="6"/>
        </Style>
      </ListBox.Styles>
      <ListBox.ItemTemplate>
        <DataTemplate DataType="{x:Type vm:SwapViewModel}">
          <Grid ColumnDefinitions="*,150,200">
            <StackPanel Orientation="Horizontal"
                        Margin="10 0 10 0"
                        Grid.Column="0">
              <!-- from -->
              <svg:Svg Width="28"
                       VerticalAlignment="Center"
                       Path="{Binding FromCurrencyViewModel.IconPath}"/>

              <StackPanel Orientation="Horizontal"
                          Margin="9 0 0 0"
                          MinWidth="150">
                <TextBlock Margin="0 12 0 12"
                           FontFamily="{DynamicResource DefaultLightFontFamily}"
                           FontSize="16"
                           Foreground="{DynamicResource DefaultForegroundBrush}"
                           VerticalAlignment="Center">
                  <TextBlock.Text>
                    <MultiBinding Converter="{StaticResource AmountToStringConverter}">
                      <Binding Path="FromAmount" Mode="OneWay"/>
                      <Binding Path="FromAmountFormat" Mode="OneWay"/>
                    </MultiBinding>
                  </TextBlock.Text>
                </TextBlock>
                <TextBlock Margin="6 0 0 0"
                           Text="{Binding FromCurrencyViewModel.CurrencyName}"
                           FontFamily="{DynamicResource DefaultLightFontFamily}"
                           FontSize="16"
                           Foreground="{DynamicResource DefaultForegroundBrush}"
                           VerticalAlignment="Center"/>
              </StackPanel>

              <!-- arrows -->
              <Path Margin="30 0 30 0"
                    Width="12"
                    Height="12"
                    Stretch="Fill"
                    Data="{DynamicResource SwapArrows}"
                    Fill="{DynamicResource LightDefaultOpacity50}"/>

              <!-- to -->
              <svg:Svg Width="28"
                       VerticalAlignment="Center"
                       Path="{Binding ToCurrencyViewModel.IconPath}"/>

              <TextBlock Margin="9 0 0 0"
                         FontFamily="{DynamicResource DefaultLightFontFamily}"
                         FontSize="16"
                         Foreground="{DynamicResource DefaultForegroundBrush}"
                         VerticalAlignment="Center">
                <TextBlock.Text>
                  <MultiBinding Converter="{StaticResource AmountToStringConverter}">
                    <Binding Path="ToAmount" Mode="OneWay"/>
                    <Binding Path="ToAmountFormat" Mode="OneWay"/>
                  </MultiBinding>
                </TextBlock.Text>
              </TextBlock>
              <TextBlock Margin="6 0 0 0"
                         Text="{Binding ToCurrencyViewModel.CurrencyName}"
                         FontFamily="{DynamicResource DefaultLightFontFamily}"
                         FontSize="16"
                         Foreground="{DynamicResource DefaultForegroundBrush}"
                         VerticalAlignment="Center"/>
            </StackPanel>

            <UserControl Grid.Column="1"
                         Classes.SwapCanceled="{Binding CompactState, Converter={StaticResource CompactStateToBoolConverter}, ConverterParameter=Canceled}"
                         Classes.SwapInProgress="{Binding CompactState, Converter={StaticResource CompactStateToBoolConverter}, ConverterParameter=InProgress}"
                         Classes.SwapCompleted="{Binding CompactState, Converter={StaticResource CompactStateToBoolConverter}, ConverterParameter=Completed}"
                         Classes.SwapRefund="{Binding CompactState, Converter={StaticResource CompactStateToBoolConverter}, ConverterParameter=Refunded}"
                         Classes.SwapUnsettled="{Binding CompactState, Converter={StaticResource CompactStateToBoolConverter}, ConverterParameter=Unsettled}"/>

            <TextBlock Grid.Column="2"
                       Text="{Binding LocalTime, Converter={StaticResource DateTimeToTxTimeConverter}}"
                       FontFamily="{DynamicResource DefaultLightFontFamily}"
                       FontSize="15"
                       Foreground="{DynamicResource DefaultForegroundBrush}"
                       VerticalAlignment="Center"
                       HorizontalAlignment="Left"/>
          </Grid>
        </DataTemplate>
      </ListBox.ItemTemplate>
    </ListBox>
  </Grid>
</UserControl>