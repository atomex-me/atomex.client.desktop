<Styles xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:svg="clr-namespace:Avalonia.Svg.Skia;assembly=Avalonia.Svg.Skia"
        xmlns:controls="clr-namespace:Atomex.Client.Desktop.Controls"
        xmlns:converters="clr-namespace:Atomex.Client.Desktop.Converters">
    <Design.PreviewWith>
        <Border Padding="100 100" Background="#122B50">
            
            <StackPanel Orientation="Horizontal">
                <controls:IconButton Classes="Update WithToolTipContent">
                    <Button>123123</Button>
                </controls:IconButton>
            
                <controls:IconButton Classes="Update"
                                     Margin="10 0 0 0"
                                     ToolText="Some tooltip text"/>
            </StackPanel>
        </Border>
    </Design.PreviewWith>
    
    <Styles.Resources>
        <converters:ToolTipOffsetConverter x:Key="ToolTipOffsetConverter" />
    </Styles.Resources>

    <Style Selector=":is(controls|IconButton):pointerover /template/ Border">
        <Setter Property="Background" Value="{DynamicResource ButtonBackgroundPointerOver}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrushPointerOver}" />
    </Style>

    <Style Selector=":is(controls|IconButton):pressed /template/ Border">
        <Setter Property="Background" Value="{DynamicResource ButtonBackgroundPressed}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrushPressed}" />
    </Style>

    <Style Selector=":is(controls|IconButton)">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="FontFamily" Value="{DynamicResource DefaultFontFamily}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="CornerRadius" Value="{DynamicResource AtomexCornerRadius}" />
        <Setter Property="Width" Value="28" />
        <Setter Property="Height" Value="28" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:IconButton}">
                    <Border ToolTip.Placement="AnchorAndGravity"
                           Width="{TemplateBinding Width}"
                           Height="{TemplateBinding Height}"
                           CornerRadius="{TemplateBinding CornerRadius}"
                           Background="{TemplateBinding Background}">
                        <Border.Styles>
                            <Style Selector="Border ToolTip">
                                <Setter Property="IsVisible"
                                        Value="{Binding $parent[controls:IconButton].ToolText,
                                        Converter={x:Static StringConverters.IsNotNullOrEmpty}}" />
                            </Style>
                        </Border.Styles>
                        <ToolTip.VerticalOffset>
                            <MultiBinding Converter="{StaticResource ToolTipOffsetConverter}">
                                <Binding Path="$self.Bounds.Height" />
                                <Binding Path="#ToolTipTextContent.Bounds.Height" />
                            </MultiBinding>
                        </ToolTip.VerticalOffset>
                        <ToolTip.Tip>
                            <TextBlock Name="ToolTipTextContent"
                                       TextWrapping="Wrap"
                                       Text="{Binding $parent[controls:IconButton].ToolText}" />
                        </ToolTip.Tip>
                        <svg:Svg />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style Selector="controls|IconButton.WithToolTipContent">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:IconButton}">
                    <Border ToolTip.Placement="AnchorAndGravity"
                           Width="{TemplateBinding Width}"
                           Height="{TemplateBinding Height}"
                           CornerRadius="{TemplateBinding CornerRadius}"
                           Background="{TemplateBinding Background}">
                        <ToolTip.VerticalOffset>
                            <MultiBinding Converter="{StaticResource ToolTipOffsetConverter}">
                                <Binding Path="$self.Bounds.Height" />
                                <Binding Path="#ToolTipContent.Bounds.Height" />
                            </MultiBinding>
                        </ToolTip.VerticalOffset>
                        <ToolTip.Tip>
                            <ContentPresenter x:Name="ToolTipContent"
                                              Content="{Binding $parent[controls:IconButton].Content}"
                                              Padding="{Binding $parent[controls:IconButton].Padding}"
                                              RecognizesAccessKey="True"
                                              HorizontalContentAlignment="{Binding $parent[controls:IconButton].HorizontalContentAlignment}"
                                              VerticalContentAlignment="{Binding $parent[controls:IconButton].VerticalContentAlignment}" />
                        </ToolTip.Tip>
                        <svg:Svg />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Updating button rotating animations -->
    <Style Selector="controls|IconButton.Updating">
        <Setter Property="IsEnabled" Value="False" />
    </Style>
    <Style Selector="controls|IconButton.Updating /template/ svg|Svg">
        <Style.Animations>
            <Animation Duration="0:0:2.5"
                       IterationCount="INFINITE"
                       FillMode="Forward"
                       PlaybackDirection="Normal">
                <KeyFrame Cue="0%">
                    <Setter Property="RotateTransform.Angle" Value="0" />
                </KeyFrame>
                <KeyFrame Cue="100%">
                    <Setter Property="RotateTransform.Angle" Value="360" />
                </KeyFrame>
            </Animation>
        </Style.Animations>
    </Style>
    <Style Selector="controls|IconButton.NotUpdating /template/ svg|Svg">
        <Style.Animations>
            <Animation Duration="0:0:0.001"
                       IterationCount="1"
                       FillMode="Forward"
                       PlaybackDirection="Normal">
                <KeyFrame Cue="100%">
                    <Setter Property="RotateTransform.Angle" Value="0" />
                </KeyFrame>
            </Animation>
        </Style.Animations>
    </Style>
    
    <Style Selector="controls|IconButton.Key">
        <Setter Property="Width" Value="24" />
        <Setter Property="Height" Value="24" />
    </Style>
    <Style Selector="controls|IconButton.Key /template/ svg|Svg">
        <Setter Property="Path" Value="/Resources/Icons/key.svg" />
        <Setter Property="Width" Value="20" />
    </Style>
    <Style Selector="controls|IconButton.Key:pointerover /template/ svg|Svg">
        <Setter Property="Path" Value="/Resources/Icons/key-light.svg" />
    </Style>
    
    <Style Selector="controls|IconButton.Update">
        <Setter Property="Width" Value="24" />
        <Setter Property="Height" Value="24" />
    </Style>
    <Style Selector="controls|IconButton.Update /template/ svg|Svg">
        <Setter Property="Path" Value="/Resources/Icons/update.svg" />
        <Setter Property="Width" Value="20" />
    </Style>
    <Style Selector="controls|IconButton.Update:pointerover /template/ svg|Svg">
        <Setter Property="Path" Value="/Resources/Icons/update-light.svg" />
    </Style>
    
    <Style Selector="controls|IconButton.Question">
        <Setter Property="Width" Value="18" />
        <Setter Property="Height" Value="18" />
        <Setter Property="Cursor" Value="Help"></Setter>
    </Style>
    <Style Selector="controls|IconButton.Question /template/ svg|Svg">
        <Setter Property="Path" Value="/Resources/Icons/question.svg" />
        <Setter Property="Width" Value="12" />
    </Style>
    <Style Selector="controls|IconButton.Question:pointerover /template/ svg|Svg">
        <Setter Property="Path" Value="/Resources/Icons/question-light.svg" />
    </Style>
</Styles>