<Styles xmlns='https://github.com/avaloniaui'
        xmlns:x='http://schemas.microsoft.com/winfx/2006/xaml'
        xmlns:currencySendVm="clr-namespace:Atomex.Client.Desktop.ViewModels.SendViewModels"
        xmlns:converters="clr-namespace:Atomex.Client.Desktop.Converters"
        xmlns:i="clr-namespace:Avalonia.Xaml.Interactivity;assembly=Avalonia.Xaml.Interactivity"
        xmlns:ia="clr-namespace:Avalonia.Xaml.Interactions.Core;assembly=Avalonia.Xaml.Interactions"
        xmlns:svg="clr-namespace:Avalonia.Svg.Skia;assembly=Avalonia.Svg.Skia">

  <Design.PreviewWith>
    <Border/>
  </Design.PreviewWith>
  
  <Style Selector="Button.EmptyBtnWithContent">
    <Setter Property="BorderThickness" Value="0"/>
  </Style>

  <Style Selector="Button.EmptyBtnWithContent:pressed /template/ ContentPresenter#PART_ContentPresenter">
    <Setter Property="Background"
            Value="{DynamicResource AlmostTransparentBrush}"/>
  </Style>

  <Style Selector="Button.EmptyBtnWithContent:pressed">
    <Setter Property="RenderTransform" Value="none"/>
  </Style>

  <Style Selector="Button.EmptyBtnWithContent:not(:pressed) /template/ ContentPresenter#PART_ContentPresenter">
    <Setter Property="Background"
            Value="{DynamicResource AlmostTransparentBrush}"/>
  </Style>

  <Style Selector="Border.Editable">
    <Setter Property="Background"
            Value="{DynamicResource LightDefaultOpacity6}"/>
  </Style>

  <Style Selector="Border.ReadOnly">
    <Setter Property="Background"
            Value="Transparent"/>
    <Setter Property="BorderBrush"
            Value="{DynamicResource LightDefaultOpacity10}"/>
    <Setter Property="BorderThickness" Value="1"/>
  </Style>

  <Styles.Resources>
    <converters:AmountToStringConverter x:Key="AmountToStringConverter"/>

    <DataTemplate x:Key="CurrencySendItemTemplate"
                  DataType="{x:Type currencySendVm:SendViewModel}">

      <StackPanel Orientation="Horizontal"
                  HorizontalAlignment="Center">
        <Border Width="50"
                Margin="-50 0 0 0">
          <TextBlock Text="From"
                     Margin="0 0 12 0"
                     Foreground="{DynamicResource SecondaryForegroundBrush}"
                     FontFamily="{DynamicResource DefaultMediumFontFamily}"
                     FontSize="13"
                     VerticalAlignment="Center"
                     HorizontalAlignment="Right"/>
        </Border>

        <Border CornerRadius="{DynamicResource AtomexCornerRadius}"
                Width="440"
                Height="80"
                VerticalAlignment="Center"
                Classes="Editable"
                Classes.ReadOnly="{Binding Stage,
                  Converter={x:Static converters:EnumToStringEqualConverter.Instance},
                  ConverterParameter=Confirmation}">
          <Button Padding="20 0"
                  Width="440"
                  Height="80"
                  Command="{Binding SelectFromCommand}"
                  Classes="EmptyBtnWithContent">
            <Grid ColumnDefinitions="24,*, Auto">

              <svg:Svg Grid.Row="0"
                       Grid.Column="0"
                       Path="{Binding CurrencyViewModel.IconPath}"
                       Width="25" />

              <TextBlock Grid.Column="1"
                         Grid.Row="0"
                         Text="{Binding FromBeautified}"
                         FontFamily="{DynamicResource DefaultMediumFontFamily}"
                         FontSize="16"
                         Margin="17 0 0 0"
                         VerticalAlignment="Center"
                         Name="FromAddressTextBox">
                <i:Interaction.Behaviors>
                  <ia:DataTriggerBehavior
                      Binding="{Binding FromBeautified, Converter={x:Static StringConverters.IsNotNullOrEmpty}}"
                      ComparisonCondition="Equal"
                      Value="False">
                    <ia:ChangePropertyAction TargetObject="{Binding #FromAddressTextBox}"
                                             PropertyName="Text"
                                             Value="Select source address..."/>

                    <ia:ChangePropertyAction TargetObject="{Binding #FromAddressTextBox}"
                                             PropertyName="Foreground"
                                             Value="{StaticResource SecondaryForegroundBrush}"/>
                  </ia:DataTriggerBehavior>
                  <ia:DataTriggerBehavior
                      Binding="{Binding FromBeautified, Converter={x:Static StringConverters.IsNotNullOrEmpty}}"
                      ComparisonCondition="Equal"
                      Value="True">
                    <ia:ChangePropertyAction TargetObject="{Binding #FromAddressTextBox}"
                                             PropertyName="Foreground"
                                             Value="{StaticResource DefaultForegroundBrush}"/>
                  </ia:DataTriggerBehavior>
                </i:Interaction.Behaviors>
              </TextBlock>

              <StackPanel Grid.Column="2"
                          Grid.Row="0"
                          Orientation="Horizontal">
                <TextBlock FontFamily="{DynamicResource DefaultMediumFontFamily}"
                           FontSize="13"
                           LineHeight="16"
                           Foreground="{DynamicResource SecondaryForegroundBrush}"
                           VerticalAlignment="Center">
                  <TextBlock.Text>
                    <MultiBinding Converter="{StaticResource AmountToStringConverter}">
                      <Binding Path="SelectedFromBalance" Mode="OneWay"/>
                      <Binding Path="CurrencyFormat" Mode="OneWay"/>
                    </MultiBinding>
                  </TextBlock.Text>
                </TextBlock>

                <TextBlock Text="{Binding CurrencyName}"
                           FontSize="13"
                           LineHeight="16"
                           Foreground="{DynamicResource SecondaryForegroundBrush}"
                           VerticalAlignment="Center"
                           Margin="2 0 0 0"/>
              </StackPanel>
            </Grid>
          </Button>
        </Border>
      </StackPanel>
    </DataTemplate>
  </Styles.Resources>
</Styles>